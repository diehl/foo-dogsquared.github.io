<?xml version="1.0" encoding="utf-8" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Homepage on Gabriel Arazas</title>
  
    <link rel="self" type="application/atom+xml" href="https://foo-dogsquared.github.io/index.atom"/><link rel="canonical" type="text/html" href="https://foo-dogsquared.github.io/"/><link rel="alternate" type="application/rss+xml" href="https://foo-dogsquared.github.io/index.rss"/><link rel="alternate" type="application/feed+json" href="https://foo-dogsquared.github.io/index.json"/><rights>Unless explicitly stated, all content released here are licensed under [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/).
</rights>
  <generator uri="https://gohugo.io/" version="0.78.0">Hugo</generator>
  <updated>0001-01-01T00:00:00Z</updated>
  <id>https://foo-dogsquared.github.io/</id><icon>https://foo-dogsquared.github.io/icon.png</icon><entry>
    <id>https://foo-dogsquared.github.io/blog/posts/implementing-configurable-base16-schemes-in-hugo-themes/</id>
    <title type="text">Implementing configurable Base16 schemes in Hugo themes</title>
    <link rel="alternate" href="https://foo-dogsquared.github.io/blog/posts/implementing-configurable-base16-schemes-in-hugo-themes/" hreflang="en" title="Implementing configurable Base16 schemes in Hugo themes"/>
    <published>2020-11-08T12:30:27+08:00</published>
    <updated>2020-11-12T11:53:34+08:00</updated><content type="html">
&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I love the &lt;a href=&#34;https://github.com/chriskempson/base16&#34;&gt;Base16 project&lt;/a&gt; which provides a template for color schemes and a decentralized set of tools and data to make customization easier.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I would like to implement them for Hugo sites.
While there are &lt;a href=&#34;https://github.com/htdvisser/hugo-base16-theme&#34;&gt;existing&lt;/a&gt; &lt;a href=&#34;https://github.com/yawpitch/base16-hugo&#34;&gt;solutions&lt;/a&gt;, it can be tedious to configure them.
I’ve always wondered if there is an easier way to use the schemes as-is.
It will make color customization very easy in a Hugo theme.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The good thing is I was able to implement it.
The following recording demonstrates that fully.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;videoblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;video src=&#34;assets/base16-data-themes.webm&#34; poster=&#34;A%20demonstration%20of%20the%20data%20themes%20shown%20as%20a%20color%20scheme.&#34; controls=&#34;&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I also ported the feature into &lt;a href=&#34;https://github.com/yihui/hugo-xmin/&#34;&gt;Xmin theme&lt;/a&gt;.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;videoblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;video src=&#34;assets/hugo-xmin-base16.webm&#34; poster=&#34;Multiple%20themes%20on%20Xmin%20theme.&#34; controls=&#34;&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I like it so much that I also added it in &lt;a href=&#34;https://github.com/foo-dogsquared/hugo-theme-more-contentful/&#34;&gt;my theme&lt;/a&gt; initially.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is not revolutionary in any way as there are themes that have already done it.
Case in point, &lt;a href=&#34;https://themes.gohugo.io/academic/&#34;&gt;the Academic theme&lt;/a&gt; with their &lt;a href=&#34;https://wowchemy.com/docs/customization/#custom-theme&#34;&gt;own version&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For this demonstration, it accepts a bunch of &lt;a href=&#34;https://github.com/chriskempson/base16#scheme-repositories&#34;&gt;Base16 schemes&lt;/a&gt; in a specific location (e.g., &lt;code&gt;data/themes&lt;/code&gt;) and the themes should appear.
To make that possible, we’ll make use of &lt;a href=&#34;https://gohugo.io/templates/data-templates/&#34;&gt;data templates&lt;/a&gt;, &lt;a href=&#34;https://gohugo.io/hugo-pipes/resource-from-template/&#34;&gt;resource templates&lt;/a&gt;, and &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties&#34;&gt;CSS variables&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
For this post, I assume you’re already familiar with Hugo along with some experience modifying themes.
As such, I’ll be showing some stuff that will be quickly glazed over.
For future references, you also need Hugo v0.74.0 and above.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_bigger_picture&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_the_bigger_picture&#34;&gt;&lt;/a&gt;The bigger picture&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Before we head into the code, we need to think and recap the workflow of adding custom Base16 themes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To add a theme, we simply need to place it in a specified location (e.g., &lt;code&gt;data/themes/&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The theme would have to build a stylesheet that dynamically make use of the Base16 palette.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The theme’s stylesheet would have to built around the Base16 palette.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A theme selection interface would be shown for the user to freely select the themes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The theme should have a default theme in case no custom themes has been added.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For the user, they would only have to put the Base16 schemes and the job’s done.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_converting_the_schemes_into_css&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_converting_the_schemes_into_css&#34;&gt;&lt;/a&gt;Converting the schemes into CSS&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s start with building the CSS created from the schemes.
It is pretty easy to map them into CSS which we’ll make use of CSS variables.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Given the following scheme…​&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;scheme: &amp;#34;Default Dark&amp;#34;
author: &amp;#34;Chris Kempson (http://chriskempson.com)&amp;#34;
base00: &amp;#34;181818&amp;#34;
base01: &amp;#34;282828&amp;#34;
base02: &amp;#34;383838&amp;#34;
base03: &amp;#34;585858&amp;#34;
base04: &amp;#34;b8b8b8&amp;#34;
base05: &amp;#34;d8d8d8&amp;#34;
base06: &amp;#34;e8e8e8&amp;#34;
base07: &amp;#34;f8f8f8&amp;#34;
base08: &amp;#34;ab4642&amp;#34;
base09: &amp;#34;dc9656&amp;#34;
base0A: &amp;#34;f7ca88&amp;#34;
base0B: &amp;#34;a1b56c&amp;#34;
base0C: &amp;#34;86c1b9&amp;#34;
base0D: &amp;#34;7cafc2&amp;#34;
base0E: &amp;#34;ba8baf&amp;#34;
base0F: &amp;#34;a16946&amp;#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;…​will produce the following CSS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;[data-theme=&amp;#34;Default Dark&amp;#34;]:root {
  --base00: #181818;
  --base01: #282828;
  --base02: #383838;
  --base03: #585858;
  --base04: #b8b8b8;
  --base05: #d8d8d8;
  --base06: #e8e8e8;
  --base07: #f8f8f8;
  --base08: #ab4642;
  --base09: #dc9656;
  --base0A: #f7ca88;
  --base0B: #a1b56c;
  --base0C: #86c1b9;
  --base0D: #7cafc2;
  --base0E: #ba8baf;
  --base0F: #a16946; }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As for the template, the following code is just one more concise to do that.
It will be stored as an asset template in &lt;code&gt;assets/templates/scheme.css&lt;/code&gt; which &lt;a href=&#34;https://gohugo.io/hugo-pipes/resource-from-template/&#34;&gt;we can create a resource out of it&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;{{- $name := index $ &amp;#34;name&amp;#34; -}}
{{- $scheme := index $ &amp;#34;scheme&amp;#34; -}}
{{- if ne $name &amp;#34;_index&amp;#34; }}[data-theme=&amp;#34;{{ $scheme.scheme }}&amp;#34;]{{ end }}:root {
  {{- range $i := seq 0 15 }}
  {{- $hex := upper (printf &amp;#34;%02x&amp;#34; $i) }}
  {{- $key := printf &amp;#34;base%s&amp;#34; $hex }}
    --{{ $key }}: #{{ index $scheme $key }};
  {{- end -}}
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this case, we make full use of &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties&#34;&gt;CSS variables&lt;/a&gt; which is &lt;a href=&#34;https://caniuse.com/css-variables&#34;&gt;supported by ~96% of the major browsers&lt;/a&gt; (as of 2020-11-08).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_building_the_css_of_the_site&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_building_the_css_of_the_site&#34;&gt;&lt;/a&gt;Building the CSS of the site&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now that we have the template, it’s time to make use of it.
In one of &lt;a href=&#34;https://gohugo.io/hugo-pipes/introduction&#34;&gt;Hugo asset processing functions&lt;/a&gt;, we can &lt;a href=&#34;https://gohugo.io/hugo-pipes/bundling/&#34;&gt;combine multiple assets together&lt;/a&gt;.
While not required, it is better to make it so that the client will make one less request for the stylesheet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The following block shows an example on how to make use of it.
This will vary according how the theme links its CSS files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;{{- $style := resources.Get &amp;#34;css/style.css&amp;#34; }}
{{- $styles := slice $style -}}

{{- $scheme_template := resources.Get &amp;#34;templates/scheme.css&amp;#34; }}
{{- range $name, $scheme := $.Site.Data.themes }}
  {{- $scheme := $scheme_template | resources.ExecuteAsTemplate (printf &amp;#34;css/themes/%s.css&amp;#34; $name) (dict &amp;#34;name&amp;#34; $name &amp;#34;scheme&amp;#34; $scheme) }}
  {{- $styles = $styles | append $scheme }}
{{- end }}

{{- $styles = $styles | resources.Concat &amp;#34;css/index.css&amp;#34; }}
&amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;{{ $styles.Permalink }}&amp;#34; /&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_creating_the_interface_for_switching_themes&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_creating_the_interface_for_switching_themes&#34;&gt;&lt;/a&gt;Creating the interface for switching themes&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now that the styles are in place, we need to have an interface to switch themes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;videoblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;video src=&#34;assets/theme-button.webm&#34; poster=&#34;The%20theme%20button.&#34; controls=&#34;&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In my version, the button will only appear if there’s more than one theme.
Furthermore, it will store the selected theme in the local storage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;{{- if gt (len (index $.Site.Data &amp;#34;themes&amp;#34;)) 1 }}
&amp;lt;div class=&amp;#34;site__theme-btn&amp;#34; aria-label=&amp;#34;Theme toggle&amp;#34;&amp;gt;
  &amp;lt;svg xmlns=&amp;#34;http://www.w3.org/2000/svg&amp;#34; id=&amp;#34;color-swatch&amp;#34; viewBox=&amp;#34;0 0 20 20&amp;#34; fill=&amp;#34;currentColor&amp;#34;&amp;gt;
    &amp;lt;path fill-rule=&amp;#34;evenodd&amp;#34; d=&amp;#34;M4 2a2 2 0 00-2 2v11a3 3 0 106 0V4a2 2 0 00-2-2H4zm1 14a1 1 0 100-2 1 1 0 000 2zm5-1.757l4.9-4.9a2 2 0 000-2.828L13.485 5.1a2 2 0 00-2.828 0L10 5.757v8.486zM16 18H9.071l6-6H16a2 2 0 012 2v2a2 2 0 01-2 2z&amp;#34; clip-rule=&amp;#34;evenodd&amp;#34;/&amp;gt;
  &amp;lt;/svg&amp;gt;
  &amp;lt;div class=&amp;#34;site__theme-dropdown&amp;#34;&amp;gt;
    {{- range $filename, $scheme := (index $.Site.Data &amp;#34;themes&amp;#34;) }}
    {{- $name := cond (eq $filename &amp;#34;_index&amp;#34;) (printf &amp;#34;%s (default)&amp;#34; .scheme) .scheme }}
    &amp;lt;div class=&amp;#34;site__theme-item&amp;#34; {{ if ne $filename &amp;#34;_index&amp;#34; }}data-theme=&amp;#34;{{ .scheme }}&amp;#34;{{ end }}&amp;gt;{{ $name }}&amp;lt;/div&amp;gt;
    {{- end }}
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;script defer&amp;gt;
  const themeDropdown = document.querySelector(&amp;#39;.site__theme-btn&amp;#39;);
  themeDropdown.addEventListener(&amp;#39;click&amp;#39;, (event) =&amp;gt; {
    const { target } = event;
    if (target.classList.contains(&amp;#34;site__theme-item&amp;#34;)) {
      if (target.dataset.theme) {
        theme = target.dataset.theme;
        window.localStorage.setItem(&amp;#34;theme&amp;#34;, theme);
        document.documentElement.dataset.theme = theme;
      } else {
        window.localStorage.removeItem(&amp;#34;theme&amp;#34;);
        delete document.documentElement.dataset.theme;
      }
    }
  });
&amp;lt;/script&amp;gt;

&amp;lt;style&amp;gt;
.site__theme-btn svg {
  width: 2em;
  height: 2em;
}

.site__theme-btn {
  background: var(--base00);
  border: var(--border-style);
  position: absolute;
  padding: 0.5em;
  right: 0;
  top: 0;
}

.site__theme-btn:hover svg {
  display: none;
}

.site__theme-dropdown {
  display: none;
  position: relative;
  left: 0;
}

.site__theme-btn:hover .site__theme-dropdown {
  display: unset;
}

.site__theme-dropdown .site__theme-item:hover {
  background: var(--base0C);
  color: var(--base00);
  cursor: pointer;
}
&amp;lt;/style&amp;gt;
{{- end }}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We still have yet to make our selected theme persistent.
The following snippet will take care of that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&amp;lt;script&amp;gt;
  let theme = window.localStorage.getItem(&amp;#39;theme&amp;#39;);
  if (theme) {
    document.documentElement.dataset.theme = theme;
  }
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It should be placed preferably after the main stylesheet was loaded to mitigate against &lt;a href=&#34;https://en.wikipedia.org/wiki/Flash_of_unstyled_content&#34;&gt;flashes of unstyled content&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_conclusion&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With all of the components in place, we can easily customize the colors for our themes.
Though, there are some bumps to go through with this approach.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You have to modify the entire CSS files to fit with the Base16 color palette.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Styling with 16 colors can be hard especially with the aim of consistency so you’ll have to style the theme carefully.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Not all of the schemes will look easy on the eyes nor consistent.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It could also be a bane to create a palette of 16 colors that looks nice.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiple themes, while nice-to-have, is not integral to create a branding which is what most authors aim (I assume).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Indeed, this is just a niche feature.
However, this feature could be derived into something simpler which is what &lt;a href=&#34;https://wowchemy.com/docs/customization/#custom-theme&#34;&gt;the Academic theme already has&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Still, I hope this is something that Hugo theme developers will consider.
It will make the Hugo ecosystem more colorful.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. For those who are looking for the code, here’s the &lt;a href=&#34;assets/hugo-xmin-base16.tar.gz&#34;&gt;source&lt;/a&gt; for it. I didn’t put it on a remote Git repo since it is just a small fork, anyways.
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry><entry>
    <id>https://foo-dogsquared.github.io/blog/posts/moving-into-nixos/</id>
    <title type="text">Moving into NixOS</title>
    <link rel="alternate" href="https://foo-dogsquared.github.io/blog/posts/moving-into-nixos/" hreflang="en" title="Moving into NixOS"/><category term="linux"/><category term="nix"/>
    <published>2020-10-11T12:47:58+08:00</published>
    <updated>2020-11-10T01:49:31+08:00</updated><content type="html">
&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Functional package management is best package management.
Therefore, NixOS is best Linux distro.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;
Here’s my journey of being enlightened and a member of the NixOS cult for 2 months.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_why_nixos&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_why_nixos&#34;&gt;&lt;/a&gt;Why NixOS?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Because I often hear the following features being tooted whenever NixOS is being mentioned.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reproducible builds which makes more reliable reinstallations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Atomic upgrades so when the power is out, no amount of doubt is shed for Nix does not apply the upgrade and you can simply restart the process.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rollbacks which is a great bonus feature allowing more room for experimentations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Declarative system configuration that doubly works as a bootstrapping script!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creation of isolated development environments with the package manager &lt;code&gt;virtualenv&lt;/code&gt;-style.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/NixOS/nixpkgs/&#34;&gt;A wide selection of community packages&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://discourse.nixos.org/&#34;&gt;A great community&lt;/a&gt; composing of users of various skill levels &lt;a href=&#34;https://www.youtube.com/channel/UC-cY3DcYladGdFQWIKL90SQ&#34;&gt;willing to reach out to newbies&lt;/a&gt; and &lt;a href=&#34;https://www.youtube.com/channel/UCDTeiF7cayvgLMUBSm9-B2A&#34;&gt;create discussions revolving the package manager&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;However, most of the features listed here aren’t unique and/or can be replicated.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reproducible builds are starting to become &lt;a href=&#34;https://reproducible-builds.org/projects/&#34;&gt;a priority in some Linux distros including Arch Linux, Fedora, Debian, and openSUSE&lt;/a&gt; (though not as much of a user-centric focus as Nix has).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rollbacks can be achieved with filesystems such as &lt;a href=&#34;https://btrfs.wiki.kernel.org/index.php/Main_Page&#34;&gt;btrfs&lt;/a&gt; and &lt;a href=&#34;https://openzfs.org/wiki/Main_Page&#34;&gt;ZFS&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In a way, a bootstrapping script is a declarative system configuration which you can easily create one yourself.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Plus, you can taste the power of NixOS without installing it since most of its power comes from the Nix package manager.
You can install it in a non-NixOS distro conflict-free since all of the stuff are happening at its own directory at &lt;code&gt;/nix&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Still, the fact that such features are built-in is a pretty great reason to try it.
And the &lt;a href=&#34;https://repology.org/repository/nix_stable&#34;&gt;&amp;gt;60,000 packages&lt;/a&gt; (as of 2020-11-04) is a nice bonus.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;
A bigger bonus, in fact, is a lot of the packages from the &lt;a href=&#34;https://aur.archlinux.org/&#34;&gt;AUR&lt;/a&gt; that I use (e.g., polybar, Zotero, Brave browser) are available as a binary.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_my_desktop_workflow&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_my_desktop_workflow&#34;&gt;&lt;/a&gt;My desktop workflow&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A few days later of fiddling with a NixOS VM, I got a &lt;a href=&#34;https://github.com/foo-dogsquared/nixos-config/tree/ef12c29f3602665d89141797a1726ed00945c818&#34;&gt;working configuration&lt;/a&gt; based from &lt;a href=&#34;https://github.com/hlissner/dotfiles/tree/744cf032c3f948fa0832096218b19f4deaec586d&#34;&gt;this guy’s config&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It’s the system config with some Nix modules applied on top with each module only requiring a simple flip of a switch to activate them.
For example, if I want to bring in my Python installation, just set &lt;code&gt;modules.dev.python.enable = true&lt;/code&gt; and the next time you run &lt;code&gt;nixos-rebuild switch --upgrade&lt;/code&gt;, it’ll bring the configured Python environment from the related module.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just for the sake of another example, if I want to enable certain stuff in my system, say Visual Studio Code, Zsh, Rust, and a bswpm-based graphical environment, I can simply set them up with the following lines in my system configuration (&lt;code&gt;/etc/nixos/configuration.nix&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-nix&#34; data-lang=&#34;nix&#34;&gt;{ config, options, lib, pkgs, ... }:

{
  imports = [
    ./hardware-configuration.nix
    ./modules
  ];

  # &amp;lt;!--snip--&amp;gt;

  modules = {
    editors.vscode.enable = true;
    dev = {
      base.enable = true;
      rust.enable = true;
    };
    shell.zsh.enable = true;
    themes.fair-and-square.enable = true;
  };
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This type of workflow is certainly a power user’s (READ: my) fantasy with the declarativeness and the ease of system management with my customizations.
It’s pretty cool to have it realized.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then, my Arch Linux installation broke &lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_3&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_3&#34; title=&#34;View footnote.&#34;&gt;3&lt;/a&gt;]&lt;/sup&gt; and the temptation meter to install NixOS on bare metal goes to 100%.
The bare-metal installation goes out smoothly with my config stored in a Git repo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;# Assuming you&amp;#39;ve set up the partitions, enabled swap partitions, and mounted them to /mnt.

# Install a bunch of packages in the medium installation.
nix-env -i git gnumake

# Bring in my NixOS config over.
sudo git clone $MY_NIXOS_CONFIG_URL /etc/dotfiles

# Install in 3... 2... 1...
PREFIX=/mnt USER=foo-dogsquared HOST=zilch make -C /etc/dotfiles install&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Even better, I can set the above snippet as a &lt;a href=&#34;https://nix.dev/tutorials/ad-hoc-developer-environments.html#reproducible-executables&#34;&gt;reproducible executable&lt;/a&gt; by just setting the shebang as follows.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;#! /usr/bin/env nix-shell
#! nix-shell -i bash -p git gnumake&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then, the installation will be more simplified by getting it from the network (i.e., &lt;code&gt;curl $MY_NIXOS_INSTALL_SCRIPT | bash -&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I still have to set up shop for my files and secrets (preferably with &lt;a href=&#34;https://www.cis.upenn.edu/~bcpierce/unison/&#34;&gt;Unison&lt;/a&gt;) but that’s pretty much it and can be easily automated.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_pain_behind_the_scenes&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_the_pain_behind_the_scenes&#34;&gt;&lt;/a&gt;The pain, behind-the-scenes&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The workflow is a result of a person with a day-worth of free time grokking Nix through trial and error.
NixOS, being so far from a traditional distro, it’s a world of its own.
Thus, it has its own set of problems.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The Nix language.
The lack of static typing (which may &lt;a href=&#34;https://github.com/NixOS/nix/issues/14&#34;&gt;not happen anytime in the future&lt;/a&gt;) and its domain-specific nature does made a harder time for me.
I haven’t fully understood it until I read &lt;a href=&#34;https://nixos.org/guides/nix-pills&#34;&gt;the beloved Nix pills series&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Nix toolchain binary is spread throughout.
As of NixOS 20.09, you have the &lt;code&gt;nix-shell&lt;/code&gt; for creating shell environments, &lt;code&gt;nix-build&lt;/code&gt; for building from Nix expressions, &lt;code&gt;nixos-rebuild&lt;/code&gt; for interacting with NixOS, &lt;code&gt;nix-collect-garbage&lt;/code&gt; for garbage collection, and so forth.
NixOS does have Nix 2.0 that attempts to bring it all in one namespace with the &lt;code&gt;nix&lt;/code&gt; binary and it will further improve at v3.0.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_4&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_4&#34; title=&#34;View footnote.&#34;&gt;4&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowing the Nix toolchain and the language is only half the battle, knowing the conventions for writing Nix packages as well as finding functions between the manuals is the rest of the battle.
You really need to dwelve into the source code of several Nix packages to be familiar with Nix.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The official documentation.
If you’ve heard newcomers trying out Nix, they often mention how harsh or sparse the documentation is (which is still the case, sadly).
A lot of the documentation of various functions are buried on the source code, their respective manuals, or non-existent.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Discoverability really suffers throughout using NixOS.
The documentation, the conventions, and the scattered toolchain really made searching for stuff easily missable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Due to how Nix revolves all around the store (i.e., &lt;code&gt;/nix/store&lt;/code&gt;), it has some implications with the absence of the traditional filesystem hierarchy standard (FHS).&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This means that you cannot easily run precompiled binaries and AppImages since most of them may rely on a linked libary placed in a traditional distro like Debian and Arch Linux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Also, you cannot easily compile certain projects and practically required to create a Nix package (or a Nix shell) for that project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Although the error messages are correct, they’re confusing (sometimes).
My experience with debugging errors are mostly composed of looking at the error stack and guesstimating the erroneous attribute.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_final_thoughts&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_final_thoughts&#34;&gt;&lt;/a&gt;Final thoughts&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using Nix convinced me that functional package management is the pretty good for operating systems and package management.
So much so that I’ve took interest in reproducibility and researched a lot of it in my free time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The problems I encountered in traditional package management — e.g., downgrading certain packages to make some packages work, inability to install the same packages with multiple versions side to side without using a third-party software — is gone like a chef’s kiss.
Furthermore, there are a bunch of bonus features that comes with it such as rollbacks and atomic upgrades.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Despite the problems, once I got into Nix, it’s hard to go back into traditional Linux distros such as &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; and &lt;a href=&#34;https://www.debian.org/&#34;&gt;Debian&lt;/a&gt; as my desktop distro.
The benefits I gain outweighs the negative moments I experienced from using it.
If I would have to recommend it, I’ll say it’s suitable for power users who like to reproduce their setup and adventurers who want to look at a different side of Linux distros if they don’t mind the slightly steeper-than-most-Linux-distros learning curve.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Fortunately, the Linux ecosystem are starting to catch up with what Nix established.
It inspired several projects from all around the corner such as &lt;a href=&#34;https://silverblue.fedoraproject.org/&#34;&gt;Fedora Silverblue&lt;/a&gt;, &lt;a href=&#34;https://guix.gnu.org/&#34;&gt;GNU Guix&lt;/a&gt;, and alternative package managers for several projects (e.g., &lt;a href=&#34;https://github.com/zyrolasting/xiden&#34;&gt;Xiden&lt;/a&gt; for &lt;a href=&#34;https://racket-lang.org/&#34;&gt;Racket&lt;/a&gt;, &lt;a href=&#34;https://github.com/andrewchambers/hermes&#34;&gt;Hermes&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the way I see things, I think functional package management is the future.
It may not be the future but it is futuristic.
Still, we’ll see how this turns out in the next year or so if it still holds up.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_an_opinionated_guide_on_how_to_learn_nix&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_an_opinionated_guide_on_how_to_learn_nix&#34;&gt;&lt;/a&gt;Appendix A: An opinionated guide on how to learn Nix&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Nix throws a bunch of traditional concepts behind as well as pioneers a bunch of things creating a steeper learning curve.
The &lt;a href=&#34;https://nixos.org/learn&#34;&gt;official documentation&lt;/a&gt; for Nix is pretty great at covering ground of all Nix stuff which makes it good as a reference but horrible for a newbie who wants to gain a quick overview of what Nix is all about.
So I’ll list a bunch of resources that helped me becoming comfortable with the Nix thing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you want an introduction to Nix, the &lt;a href=&#34;https://www.youtube.com/playlist?list=PLRGI9KQ3_HP_OFRG6R-p4iFgMSK1t5BHs&#34;&gt;Nixology&lt;/a&gt; video series is a great primer starting with &lt;a href=&#34;https://youtu.be/6iVXaqUfHi4&#34;&gt;this video&lt;/a&gt;.
You don’t have to watch through the whole playlist but it also gives practical starter points such as &lt;a href=&#34;https://youtu.be/q8bZy9kuzEY&#34;&gt;demystifying Nixpkgs&lt;/a&gt; and &lt;a href=&#34;https://youtu.be/qYGo9QYNVpM&#34;&gt;the standard library&lt;/a&gt; which you’ll need you know once you’ve started packaging with Nix.
I really recommend this series, it’s pretty great!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you’re decided to go with NixOS, the first few chapters of the &lt;a href=&#34;https://nixos.org/learn.html&#34;&gt;official manuals&lt;/a&gt; are great and extensive.
A good first reading section after installation is &lt;a href=&#34;https://nixos.org/manual/nixos/stable/index.html#ch-running&#34;&gt;how to administer your NixOS installation&lt;/a&gt; and &lt;a href=&#34;https://nixos.org/manual/nix/stable/#chap-package-management&#34;&gt;its package management process&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I have difficulty grokking the manual but thankfully a fellow newcomer &lt;a href=&#34;https://stephank.nl/p/2020-06-01-a-nix-primer-by-a-newcomer.html&#34;&gt;wrote a document listing the terminologies&lt;/a&gt; helping me absorb the material (big thanks to Stéphan Kochen for the writing).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Take a look at &lt;a href=&#34;https://nixos.wiki/wiki/Configuration_Collection&#34;&gt;others&amp;#39; NixOS config&lt;/a&gt; and see how they did it.
For other examples, you can take a look at &lt;a href=&#34;https://github.com/foo-dogsquared/nixos-config&#34;&gt;my config&lt;/a&gt; and the &lt;a href=&#34;https://github.com/hlissner/dotfiles/&#34;&gt;inspiration behind my config&lt;/a&gt; (except his&amp;#39; is on the edge of the bleeding edge).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to keep up-to-date with the community, you might want to hang out in the &lt;a href=&#34;https://discourse.nixos.org/&#34;&gt;official forum&lt;/a&gt;.
If you want realtime help, you can go to the IRC channel &lt;code&gt;#nix&lt;/code&gt; at &lt;code&gt;freenode.net&lt;/code&gt;.
The Nix community knows that its documentation is lagging so they’re pretty open to newbies asking for help that could’ve been easily missed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What about if you’re now comfortable with Nix (or NixOS) and now looking for more ways to use its power (i.e., packaging some applications)?&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&#34;https://nixos.org/guides/nix-pills&#34;&gt;beloved Nix pills series&lt;/a&gt; and the &lt;a href=&#34;https://nixos.org/manual/nixpkgs/stable&#34;&gt;nixpkgs manual&lt;/a&gt; is a great starting point especially if you’re starting to contribute to the &lt;a href=&#34;https://github.com/NixOS/nixpkgs/&#34;&gt;official package set&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://nix.dev/&#34;&gt;nix.dev&lt;/a&gt; and &lt;a href=&#34;https://nixos.wiki/&#34;&gt;the unofficial Nix wiki&lt;/a&gt; are also great introductions to more Nix stuff with practical applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jon Ringer, one of the long-time Nix user and contributor, has a &lt;a href=&#34;https://www.youtube.com/channel/UC-cY3DcYladGdFQWIKL90SQ&#34;&gt;YouTube channel focused on Nix tutorials at beginners- and intermediate-level&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to look out for its future, the community arranges an &lt;a href=&#34;https://nixcon.org&#34;&gt;annual event with talks all about Nix&lt;/a&gt;.
In fact, as of 2020-11-03, a &lt;a href=&#34;https://2020.nixcon.org/&#34;&gt;NixCon online conference&lt;/a&gt; has recently occurred with the event lasting for two days.
They also archive their talks and whatnot on their &lt;a href=&#34;https://www.youtube.com/channel/UCjqkNrQ8F3OhKSCfCgagWLg&#34;&gt;YouTube channel&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_a_tour_of_cool_nix_related_things_ive_found&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_a_tour_of_cool_nix_related_things_ive_found&#34;&gt;&lt;/a&gt;Appendix B: A tour of cool Nix-related things I’ve found&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;My usage of NixOS for two months is nothing more than a desktop distro switched because of its larger package set.
Nonetheless, I still found some cool things.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The general concept that Nix pioneered: &lt;a href=&#34;https://edolstra.github.io/pubs/phd-thesis.pdf&#34;&gt;functional package management&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cachix.org/&#34;&gt;A binary caching service for Nix&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are some things you can do regarding your system.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can build the system as a virtual machine with &lt;code&gt;nixos-rebuild build-vm&lt;/code&gt;!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can &lt;a href=&#34;https://nixos.org/guides/building-and-running-docker-images.html&#34;&gt;build and run a Docker image from a Nix expression&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;a href=&#34;https://nixos.org/manual/nixos/stable/#sec-building-cd&#34;&gt;custom ISO image&lt;/a&gt; from your configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://nixos.org/manual/nixpkgs/stable/#chap-overrides&#34;&gt;Overrides&lt;/a&gt; allows you to mix and match packages freely because of the package manager.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If Arch Linux has AUR, NixOS has the &lt;a href=&#34;https://github.com/nix-community/NUR&#34;&gt;NUR&lt;/a&gt;, a user-created repository of their own packages.
&lt;a href=&#34;https://github.com/foo-dogsquared/nur-packages&#34;&gt;Here’s my instance for a start&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Already mentioned but &lt;a href=&#34;https://nix.dev/tutorials/ad-hoc-developer-environments.html#reproducible-executables&#34;&gt;reproducible executables&lt;/a&gt; can make worry-free (regarding dependencies) scripts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A lot of the community’s documentation on anything Nix-related which is already given on &amp;#34;&lt;a href=&#34;#_an_opinionated_guide_on_how_to_learn_nix&#34;&gt;An opinionated guide on how to learn Nix&lt;/a&gt;&amp;#34; section.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://nixcon.org/&#34;&gt;NixCon&lt;/a&gt;, an annual event organized by the community to give talks about anything Nix-related.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tweag.io/blog/2020-05-25-flakes/&#34;&gt;Nix flakes&lt;/a&gt; (which is an experimental feature as of 2020-11-04 so be warned).
It is also the subject of a &lt;a href=&#34;https://www.youtube.com/watch?v=7sQa04olUA0&amp;amp;t=9113s&#34;&gt;related talk on NixCon 2020&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.ipfs.io/2020-09-08-nix-ipfs-milestone-1/&#34;&gt;IPFS support for Nix&lt;/a&gt; which can make content-addressable distributions possible!
&lt;a href=&#34;https://www.youtube.com/watch?v=N9Dygq4Lz0c&amp;amp;t=9633s&#34;&gt;A talk about it is recently given at NixCon 2020&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. There’s also &lt;a href=&#34;https://guix.gnu.org/&#34;&gt;Guix&lt;/a&gt; which is also best distro and in my to-do list to cover it sometime in the future.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. Fun fact, it is around the same number as the AUR (as of 2020-11-04).
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_3&#34;&gt;
&lt;a href=&#34;#_footnoteref_3&#34;&gt;3&lt;/a&gt;. Probably because I did not read a &lt;code&gt;PKGBUILD&lt;/code&gt; of a malicious AUR package.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_4&#34;&gt;
&lt;a href=&#34;#_footnoteref_4&#34;&gt;4&lt;/a&gt;. Though, this is a minor inconvenience since you can just type &lt;code&gt;nix&lt;/code&gt; and use tab-completion but it still gets to me sometimes.
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry><entry>
    <id>https://foo-dogsquared.github.io/blog/posts/what-is-effective-documentation/</id>
    <title type="text">What is effective documentation</title>
    <link rel="alternate" href="https://foo-dogsquared.github.io/blog/posts/what-is-effective-documentation/" hreflang="en" title="What is effective documentation"/><category term="writing"/><category term="documentation"/>
    <published>2019-09-28T20:29:58+08:00</published>
    <updated>2020-11-10T01:49:31+08:00</updated><content type="html">
&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’m beginning to be more oriented on technical writing.
In fact, I’m starting to consider to take on technical writing as a career.
So I ask myself related to the very thing that makes me appreciate technical writing: documentation.
That question is &amp;#34;What is effective documentation?&amp;#34;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As I remember from &lt;a href=&#34;https://www.youtube.com/watch?v=BAJ8F7yQz64&#34;&gt;a presentation&lt;/a&gt;, there’s this quote that rings very well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
Documentation is the “curb appeal” of your software.
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Dan Allen&lt;br/&gt;
&lt;cite&gt;Antora: Documentation Sites for Software Teams&lt;/cite&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Despite the saying, it applies to all types of projects.
It is the &amp;#34;curb appeal&amp;#34; of your project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s take a shallow dive on the deep ocean of documentation and inspect what I think mainly builds it: technical writing and typography.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_importance_of_technical_writing&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_importance_of_technical_writing&#34;&gt;&lt;/a&gt;Importance of technical writing&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Technical writing is an often-overlooked process for open source programs.
This is reflected in &lt;a href=&#34;https://opensourcesurvey.org/2017/&#34;&gt;GitHub’s 2017 survey on open source&lt;/a&gt; (which is the latest version as of 2019-09-20) where incomplete and/or confusing documentation is the biggest hurdle.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What’s common among successful software projects like &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt;, &lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt;, &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;https://laravel.com/&#34;&gt;Laravel&lt;/a&gt;, &lt;a href=&#34;https://www.mozilla.org/en-US/firefox/&#34;&gt;Firefox&lt;/a&gt;, &lt;a href=&#34;https://www.latex-project.org/&#34;&gt;LaTeX&lt;/a&gt;, &lt;a href=&#34;https://www.google.com/chrome/browser/index.html&#34;&gt;Chrome&lt;/a&gt;, and &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; is the accessible and thorough documentation that describes enough details for the new and the seasoned users.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As such, one of the leading importance of technical writing is &lt;strong&gt;communication&lt;/strong&gt;.
Without the work of technical writing means no communication.
Non-existent communication means no incentive to look for your project.
It’s that simple.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation is where the first impression lies for your potential users.
Despite the saying of judging the book by its cover, the documentation can reflect the quality of the project.
Having non-existent or bad documentation gives the impression that your project is bad no matter how well-crafted or optimized your code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation is also where the lasting impression goes for the veterans and potential contributors.
If the users see the project docs is working as intended and well-maintained then it’s more likely for them to participate and contribute through bug issues and code improvements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you’re learning another framework or a tool, odds are you would first visit the startup guide from their homepage.
If you want to know more specific about the tool, you would dive further into their detailed sections.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to get a shot at making your project to be recognized, give the documentation a priority.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Like what I previously mentioned, this doesn’t only apply to software projects but to all types of products whether it’s a power tool, a phone, a calculator, or a book.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you’re opening up a package of your shiny new power tool, odds are you would need to get your hands on a manual.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you’ve just received your new phone, you would find the user manual first to get started.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to know all of the capabilities of your calculator, you might want to view the manual.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you newly start with a referential book, you would explore first the preface or the introduction where it introduces the structure of each section.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As you imagine, the use and importance of technical writing is everywhere.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Though, be wary that there is a flip side on technical writing.
When there’s communication, there’s miscommunication.
It can be blamed to various things but the point is having outdated or incorrect documentation can also give a bad impression.
Worse is that it might be better to have no documentation at all.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_importance_of_typography&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_importance_of_typography&#34;&gt;&lt;/a&gt;Importance of typography&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How about typography?
It seems like it’s a specific requirement for a software project but it can be important in making your content legible.
No one in their right mind would read the content no matter how well-written if it’s badly formatted.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Typography can boost the &amp;#34;curb appeal&amp;#34; further by adding greenery to your project.
It makes all the more pleasing to the eyes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Typography also dictates how long will the user stay reading.
A badly formatted book will surely receive shorter retention than a badly written one.
It’s a bonus if the reader will also get a laugh out of the badly written one.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_inspecting_other_projects&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_inspecting_other_projects&#34;&gt;&lt;/a&gt;Inspecting other projects&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;They say that success and advancements stand on the shoulder of giants.
Let’s inspect how other software projects did their thing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Think about most of the software you’ve used and remember your experience navigating the documentation.
The million-dollar question is what’s common between the documentations of popular projects and what good practices can we get from them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To get us in the same page, here’s the list of software I reflected and inspected:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://luatex.org/&#34;&gt;LuaTeX&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ctan.org/pkg/latexmk/&#34;&gt;Latexmk&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://reactjs.org/&#34;&gt;ReactJS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anyhow, I try to answer the million-dollar question.
I put the answers in two lists: one for the content and one for the typography.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_common_attributes_of_documentation_content&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_common_attributes_of_documentation_content&#34;&gt;&lt;/a&gt;Common attributes of documentation content&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s what I gathered for reflecting the experience reading through the content.
I’ve also observed how they organize their content and lead their users into the different parts of the program.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;They provide examples.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;They don’t repeat information a lot and gives the appropriate link instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;They organize the documents commonly by required level of expertise and general concepts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Most of them (if not all) provide generalized explanations and a detailed version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Not everything is documented compared to looking at the source, if available (e.g., &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_typographic_best_practices&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_typographic_best_practices&#34;&gt;&lt;/a&gt;Typographic best practices&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s one for navigating through the documentation and observing the typography.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Optimal characters per line are at least 50 to 80.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Base font size is at least 16px.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Font size and spacing of headers of various levels are distinct.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consistent use of brand colors (if there’s any).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use monospace font for code listings.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Regarding the best example, I think &lt;a href=&#34;https://reactjs.org/docs/&#34;&gt;React&lt;/a&gt; does this the best both in documentation content and typographic practices.
Go on, take a gander on it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;assets/react-docs.webp&#34; alt=&#34;ReactJS docs&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 1. ReactJS documentation&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_how_i_practice_these&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_how_i_practice_these&#34;&gt;&lt;/a&gt;How I practice these?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I won’t detail much on how to practice technical writing or apply typographic practices since I’m not a professional.
Instead, I’m describing how I apply the two skills.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_plan_the_document_early_on_the_project&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_plan_the_document_early_on_the_project&#34;&gt;&lt;/a&gt;Plan the document early on the project&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To create good documentation, you must take the time to plan the document.
Ask yourself what is the ideal document structure for your users, what information do they need to know, and other questions that reflect the value of efficient documentation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Even for a small project, making effort to plan is heavily appreciated.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In my case, I created a document structure for my project.
Create a README and the &lt;code&gt;docs/&lt;/code&gt; folder for assets (e.g., images, videos).
I also created a standard template for my README: the abstract, purpose, getting started guide, details, and the license.
You can see more of the details in my &lt;a href=&#34;https://github.com/foo-dogsquared/personal-style-guides/blob/master/src/projects.adoc&#34;&gt;project template documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_document_only_the_big_things&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_document_only_the_big_things&#34;&gt;&lt;/a&gt;Document only the big things&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;By that, I mean prioritize documenting the high-level details like the architecture, data design, implementations, and abstractions.
You don’t have to document your whole codebase (and you shouldn’t).
Leave out the very specific details and only draw the big picture.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you did document the whole thing from its nooks and crannies, you give rise to another problem of constantly switching gears for updating your code and the documentation.
It’s a nasty experience that you might as well not document it in the first place.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_create_a_minimal_design_that_focuses_on_readability&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_create_a_minimal_design_that_focuses_on_readability&#34;&gt;&lt;/a&gt;Create a minimal design that focuses on readability&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For practicing typography, you can create a minimalistic design that focuses on content form.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In my case, I recently started to refer to &lt;a href=&#34;https://practicaltypography.com/&#34;&gt;some&lt;/a&gt; &lt;a href=&#34;https://zellwk.com/blog/why-vertical-rhythms/&#34;&gt;related&lt;/a&gt; &lt;a href=&#34;https://www.paulolyslager.com/optimal-text-layout-line-length/&#34;&gt;resources&lt;/a&gt; and quickly created a &lt;a href=&#34;https://github.com/foo-dogsquared/hugo-theme-contentful&#34;&gt;Hugo theme that focuses on it&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;assets/hugo-theme-contentful.webp&#34; alt=&#34;.Hugo theme Contentful&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 2. Here’s the resulting Hugo theme - Contentful&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You could also start by redesigning some of your previous stuff.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ve started to reconfigure my LaTeX templates and it is certainly more readable than before.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_1&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_1&#34; title=&#34;View footnote.&#34;&gt;1&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;assets/latex-lecture-layout.webp&#34; alt=&#34;My current LaTeX lecture layout&#34; width=&#34;450&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 3. My current LaTeX lecture layout&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It has improved spacing between paragraphs and non-textblocks, larger font sizes for mathematical texts, and improved font combinations.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_2&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_2&#34; title=&#34;View footnote.&#34;&gt;2&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_create_a_style_guide_or_a_set_of_guidelines&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_create_a_style_guide_or_a_set_of_guidelines&#34;&gt;&lt;/a&gt;Create a style guide or a set of guidelines&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Style guides are used to keep certain aspects of a project to be consistent.
Certain examples exist on styling your code, general writing, academic writing, citations, design, technical writing, and many others.
&lt;sup class=&#34;footnote&#34;&gt;[&lt;a id=&#34;_footnoteref_3&#34; class=&#34;footnote&#34; href=&#34;#_footnotedef_3&#34; title=&#34;View footnote.&#34;&gt;3&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;However, all (if not most) style guides are suited for the organization’s purposes.
If you aren’t able to find a suitable one, just create one.
It doesn’t have to cover every possible case since it is specifically created for your own (or your team).
You can steal ideas from multiple style guides, cherry-pick the best of them, and combine it to suit your specific needs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In my case, I created a writing style guide that generally applies to all of my writing and typography works.
I eventually dedicated &lt;a href=&#34;https://github.com/foo-dogsquared/personal-style-guides&#34;&gt;a repo for my guide styles&lt;/a&gt; to easily refer to it in the future.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_conclusion&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation is a powerful tool for projects.
They serve as an introduction and make the &amp;#34;curb appeal&amp;#34; for your project.
Practicing technical writing can amp up your communication skills which can mean the make-or-break moment for your project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In any case, technical writing must also be presentable.
Your documentation may have all of the content they need to know but nobody is going to read good content with bad form.
Typography can help you out in making your content legible and easy to read.
Applying related typography practices can make cruising through the documentation a pleasant experience.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Giving some time for technical writing and typography can surely boost the impression of your project.
It also adds the bonus of future-proofing your project for yourself and for others.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_further_looking&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_further_looking&#34;&gt;&lt;/a&gt;Further looking&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_books&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_books&#34;&gt;&lt;/a&gt;Books&lt;/h3&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://openoregon.pressbooks.pub/aboutwriting/&#34;&gt;&lt;em&gt;About Writing: A Guide&lt;/em&gt; by &amp;#34;Open Oregon Press&amp;#34;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;An open textbook that describes the process of writing for different papers.
It also gives tips on writing a sufficient body of text that can apply for various papers like academic and research papers.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://practicaltypography.com/&#34;&gt;&lt;em&gt;Practical Typography&lt;/em&gt; by &amp;#34;Matthew Butterick&amp;#34;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A pay-as-you-want online book that introduces you to typography with practical lessons and descriptions.
I fully recommend this book if you want to learn more about how to make your content presentable.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://openoregon.pressbooks.pub/technicalwriting/&#34;&gt;&lt;em&gt;Technical Writing&lt;/em&gt; by &amp;#34;Open Oregon Press&amp;#34;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Another open textbook from the &lt;a href=&#34;https://openoregon.pressbooks.pub/&#34;&gt;Open Oregon Press&lt;/a&gt; that specifically tackles technical writing of various formats from emails, cover letters, and résumé.
This covers the basics you need to get started on practicing efficient technical writing.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_tools&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_tools&#34;&gt;&lt;/a&gt;Tools&lt;/h3&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;An Asciidoc-based toolchain for publishing documents into various output formats.
It also expanded upon the original &lt;a href=&#34;http://asciidoc.org/&#34;&gt;Asciidoc&lt;/a&gt; markup language with additional text formatting features.
It’s what I mainly use for writing documentation for my projects.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_web&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_web&#34;&gt;&lt;/a&gt;Web&lt;/h3&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://github.com/noffle/art-of-readme&#34;&gt;&lt;em&gt;Art of README&lt;/em&gt; by &amp;#34;noffle&amp;#34;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;It’s a GitHub repo detailing on READMEs from what they are to what makes them good.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://www.instructionalsolutions.com/blog/become-a-technical-writer&#34;&gt;&lt;em&gt;How to Become a Technical Writer: A Beginner’s Guide&lt;/em&gt; by &amp;#34;Tom DuPuis&amp;#34;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;An overview for absolute beginners for those who are looking into technical writing.
Tackles various topics that you should know first and foremost.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://www.writethedocs.org/&#34;&gt;Write the Docs&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A global community of people who cares about writing documentation.
They provide good resources for getting started with technical writing on the website.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;hr/&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_1&#34;&gt;
&lt;a href=&#34;#_footnoteref_1&#34;&gt;1&lt;/a&gt;. My LaTeX templates can be found at &lt;a href=&#34;https://github.com/foo-dogsquared/latex-templates/&#34;&gt;my GitHub account&lt;/a&gt;.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_2&#34;&gt;
&lt;a href=&#34;#_footnoteref_2&#34;&gt;2&lt;/a&gt;. If you’re curious about the font combination, it uses &lt;a href=&#34;https://github.com/adobe-fonts/source-serif-pro&#34;&gt;Source Serif Pro&lt;/a&gt; for roman (normal), &lt;a href=&#34;https://github.com/adobe-fonts/source-sans-pro&#34;&gt;Source Sans Pro&lt;/a&gt; for sans, and &lt;a href=&#34;https://github.com/tonsky/FiraCode&#34;&gt;Fira Code&lt;/a&gt; for monospace.
&lt;/div&gt;
&lt;div class=&#34;footnote&#34; id=&#34;_footnotedef_3&#34;&gt;
&lt;a href=&#34;#_footnoteref_3&#34;&gt;3&lt;/a&gt;. You can see examples of them at my &lt;a href=&#34;https://github.com/foo-dogsquared/personal-style-guides&#34;&gt;personal style guides README&lt;/a&gt;.
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry><entry>
    <id>https://foo-dogsquared.github.io/blog/posts/blogging-with-asciidoctor-and-hugo/</id>
    <title type="text">Blogging with Asciidoctor and Hugo</title>
    <link rel="alternate" href="https://foo-dogsquared.github.io/blog/posts/blogging-with-asciidoctor-and-hugo/" hreflang="en" title="Blogging with Asciidoctor and Hugo"/><category term="writing"/><category term="ssg"/><category term="hugo"/>
    <published>2019-09-03T13:07:43+08:00</published>
    <updated>2020-11-10T01:49:31+08:00</updated><content type="html">
&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Finally, I’ve found a great blogging workflow with Hugo and Asciidoctor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the extensive built-in feature set of Hugo and the feature-rich
text formatting options that Asciidoctor offers, it creates a blogging experience
composed of easy content management and fun writing experience.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As of this writing, there’s only a
&lt;a href=&#34;https://rgielen.net/posts/2019/creating-a-blog-with-hugo-and-asciidoctor/&#34;&gt;handful&lt;/a&gt;
&lt;a href=&#34;https://opensource.com/article/17/8/asciidoc-web-development&#34;&gt;of&lt;/a&gt;
&lt;a href=&#34;https://www.bryanklein.com/blog/hugo-asciidoctor-vscode-gitlab-firebase/&#34;&gt;articles&lt;/a&gt;
&lt;a href=&#34;https://blog.anoff.io/2019-02-17-hugo-render-asciidoc/&#34;&gt;and&lt;/a&gt;
&lt;a href=&#34;http://discuss.asciidoctor.org/Writing-BLOG-in-Asciidoctor-td7015.html&#34;&gt;discussions&lt;/a&gt;
about blogging
with Hugo and Asciidoctor so I’ll add my 2 cents into the pile with
the recent version of Hugo and Asciidoctor.
Think of it like an update report.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For future references, here are the following tools and their versions
used for this post:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Asciidoctor v2.0.10&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hugo v0.57.2&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
This is not a full-on tutorial, more like a tour guide of my blogging setup with
Hugo and Asciidoctor.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_prerequisites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_prerequisites&#34;&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to follow through the whole post, I assume you already
satisfied the following conditions:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Installed &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; and &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Already know the basics of both tools&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Already has a Hugo project with a theme installed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;OPTIONAL&lt;/strong&gt;: A &lt;a href=&#34;https://travis-ci.org/&#34;&gt;Travis CI&lt;/a&gt; account (or similar CI/CD services)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;OPTIONAL&lt;/strong&gt;: A &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; account (or similar remote Git repo)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
If you’re not familiar with Hugo and Asciidoctor, they both have
a quick start guide. Here’s for &lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;Hugo&lt;/a&gt; and
&lt;a href=&#34;https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/&#34;&gt;Asciidoctor&lt;/a&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_asciidoctor_and_hugo&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_asciidoctor_and_hugo&#34;&gt;&lt;/a&gt;Asciidoctor and Hugo&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In most static site generators including Hugo, &lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt;
is the one and only first-class citizen when it comes to creating posts.
However, in recent Hugo versions, there exists the
&lt;a href=&#34;https://blog.anoff.io/2019-02-17-hugo-render-asciidoc/&#34;&gt;external helpers&lt;/a&gt;
feature which calls appropriate external programs to certain type of files
(or file extension).
Fortunately, Asciidoctor-based files are automatically compiled with
Asciidoctor so we don’t need to do anything.
Just have it installed and you’re raring to go.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_creating_content_with_asciidoctor&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_creating_content_with_asciidoctor&#34;&gt;&lt;/a&gt;Creating content with Asciidoctor&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Creating Asciidoctor-based content in a Hugo site is very easy.
Just create an Asciidoctor file manually or you could go with Hugo’s way
which is the optimal way.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;hugo new posts/my-first-post.adoc&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And there should be a new Asciidoctor file at &lt;code&gt;content/posts/my-first-post.adoc&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Most likely, you would see that it’s formatted like a Markdown file since
most themes do not have focus for Asciidoctor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One of the features of Hugo is letting you create
&lt;a href=&#34;https://gohugo.io/content-management/archetypes/#readout&#34;&gt;content templates&lt;/a&gt; (or an
archetype) for your usual content.
We create content with Asciidoctor so let’s create a quick template for that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create a file in &lt;code&gt;archetypes/default.adoc&lt;/code&gt;.
This will be the master template whenever Hugo detects the new content
has a file extension of &lt;code&gt;.adoc&lt;/code&gt;.
Then, create a template for your Asciidoctor documents.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To get an example, here’s my template for my Asciidoctor documents.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-asciidoctor&#34; data-lang=&#34;asciidoctor&#34;&gt;--- &lt;b class=&#34;conum&#34;&gt;(1)&lt;/b&gt;
title: &amp;#34;{{ replace .Name &amp;#34;-&amp;#34; &amp;#34; &amp;#34; | title }}&amp;#34; &lt;b class=&#34;conum&#34;&gt;(2)&lt;/b&gt;
date: {{ .Date }} //
draft: true

categories:
    - &amp;#34;category1&amp;#34;
tags:
    - &amp;#34;tag1&amp;#34;
    - &amp;#34;tag2&amp;#34;
---

= {{ replace .Name &amp;#34;-&amp;#34; &amp;#34; &amp;#34; | title }}
{{ .Site.Author.name }} {{ with .Site.Author.email }}&amp;lt;{{ . }}&amp;gt;{{ end }} &lt;b class=&#34;conum&#34;&gt;(3)&lt;/b&gt;
{{ dateFormat &amp;#34;2006-01-02&amp;#34; .Date }} &lt;b class=&#34;conum&#34;&gt;(4)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The frontmatter.
Unfortunately, we would still have to put this for Hugo to
recognize this document as one of the content.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Converts the slug of the document to title case.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Putting the author in the Asciidoctor preamble along with the email (if there’s any).
Feel free to discard it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The date in ISO format.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Speaking of frontmatters, native Asciidoctor frontmatter is not recognized.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can modify the template to your heart’s content.
For example, if you use &lt;a href=&#34;https://www.mathjax.org/&#34;&gt;MathJax&lt;/a&gt; for writing mathematical formulas,
you can &lt;a href=&#34;https://asciidoctor.org/docs/user-manual/#activating-stem-support&#34;&gt;add the stem attribute&lt;/a&gt;
(&lt;code&gt;:stem:&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since Asciidoctor-based documents only recieve basic support, you still need
to do some work yourself before you get satisfied with the settings.
For example, enabling syntax highlighting and styling certain things like
callouts, admonition blocks, and open blocks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Also, not everything is 100% working so you might encounter some problems
which is discussed later in the post.
Nonetheless, it works for the most part and you can still write expressively with the
heavier feature set of Asciidoctor.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_syntax_highlighting_without_the_shortcode&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_syntax_highlighting_without_the_shortcode&#34;&gt;&lt;/a&gt;Syntax highlighting (without the shortcode)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
As of 2019-09-25, I don’t use a syntax highlighter anymore for my site in the name of performance and consideration for low internet speeds.
Clearly, I didn’t think ahead about this.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Syntax highlighting can be an important feature for technical blogs especially
if you often have to show code in your posts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;On Asciidoctor, you can
&lt;a href=&#34;https://asciidoctor.org/docs/user-manual/#enabling-source-highlighting&#34;&gt;enable syntax highlighting&lt;/a&gt;
with the &lt;code&gt;:source-highlighter:&lt;/code&gt; attribute.
You can compile it on runtime with the executable but it’s not possible with
Hugo since the arguments passed to it is hardcoded.
You can, however, enable it for every document you have but as you might
imagine, it’s not ideal and requires some manual labor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you’re only relying on the out-of-the-box features from Hugo (READ: if),
you can get it with the
&lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#highlight&#34;&gt;&lt;code&gt;highlight&lt;/code&gt; shortcode&lt;/a&gt;
which is going to bite back if you’re going to migrate to another blogging
platform or static site generator.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Still, there are some ways with getting syntax highlighting for your Hugo site
without the Asciidoctor attribute or the Hugo shortcode.
It’ll just take some more effort to get through.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One of the more reliable ways on enabling it is using syntax
highlighters like &lt;a href=&#34;https://github.com/highlightjs/highlight.js&#34;&gt;highlight.js&lt;/a&gt;
or &lt;a href=&#34;https://prismjs.com/&#34;&gt;PrismJS&lt;/a&gt;.
I’ll be discussing on setting it with PrismJS since it easier and
that’s what I’m mainly using on my blog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For future references, the version of PrismJS I’m using is at v1.17.1.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_getting_the_files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_getting_the_files&#34;&gt;&lt;/a&gt;Getting the files&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First, we are going to need the syntax highlighter scripts along
with their stylesheets, of course.
I recommend to save the files locally instead of linking them through
a CDN since they’re often prebuilt with limited languages and settings support.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Getting the files for PrismJS is very easy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Go to the &lt;a href=&#34;https://prismjs.com/download.html&#34;&gt;download page&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the minified version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select all of the languages you think you need to support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Include the &lt;a href=&#34;https://prismjs.com/plugins/keep-markup/&#34;&gt;&amp;#34;Keep Markup&amp;#34;&lt;/a&gt; plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You’ll need the &amp;#34;Keep Markup&amp;#34; plugin in case you use
&lt;a href=&#34;https://asciidoctor.org/docs/user-manual/#callouts&#34;&gt;Asciidoctor callouts&lt;/a&gt; since
PrismJS replaces the HTML elements along with their classes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the script downloaded, place them somewhere in your Hugo project.
For this purpose, I’ll assume the script is in the &lt;code&gt;static/js/lib/SYNTAXHIGHLIGHT.js&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Don’t forget to choose a theme as well.
I’ll assume that the stylesheet is in &lt;code&gt;static/css/SYNTAXSTYLESHEET.css&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_integrating_it_with_hugo&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_integrating_it_with_hugo&#34;&gt;&lt;/a&gt;Integrating it with Hugo&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now the hardest part, putting them into use with your Hugo project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Add the syntax highlighter before the end of the document
body (&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;) tag and the stylesheet inside the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The available location for it depends on the theme.
I recommend to start looking to the layout folder with the default templates
of the theme (&lt;code&gt;theme/$NAME_OF_THEME/layouts/_default&lt;/code&gt;)
then the partial folder (&lt;code&gt;theme/$NAME_OF_THEME/layouts/partials&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
You might want to start at the base template
(&lt;code&gt;theme/$NAME_OF_THEME/layouts/_default/baseof.html&lt;/code&gt;).
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Copy the appropriate file from the theme folder to your own layout
folder and link it similar to the following code listing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;!-- Inside of the head element --&amp;gt;
&amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;{{ &amp;#34;css/SYNTAXSTYLESHEET.css&amp;#34; | absURL }}&amp;#34;&amp;gt;

&amp;lt;!-- ... --&amp;gt;

&amp;lt;!-- Before the end of the body tag --&amp;gt;
&amp;lt;script src=&amp;#34;{{ &amp;#34;js/lib/SYNTAXHIGHLIGHT.js&amp;#34; | absURL }}&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The setup is done!
That leaves one less problem for content migration in case
you want to move out of Hugo.
You’ll thank yourself for doing so.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_problems_with_using_the_workflow&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_problems_with_using_the_workflow&#34;&gt;&lt;/a&gt;Problems with using the workflow&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;While Hugo and Asciidoctor is great and all, there are a couple of
problems with this setup.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The most obvious is the HTML output of Asciidoctor with the default
backend is not great and leaves a lot of things to be desired.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;assets/asciidoctor-sample-html.webp&#34; alt=&#34;`&amp;lt;div&amp;gt;` then a `&amp;lt;p&amp;gt;` for a paragraph&#34; width=&#34;really?&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 1. &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; then a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; for a paragraph, really?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It’s not semantic and it is unconventional.
Not only that it’s a pain to style it with CSS but also breaks a lot
of the accessibility features like screen readers since it
relies on certain HTML tag structures.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
You can get around this by using the
&lt;a href=&#34;https://github.com/jirutka/asciidoctor-html5s&#34;&gt;Asciidoctor HTML5s backend&lt;/a&gt; to
produce the correct and semantic web-friendly output.
Remember, the arguments passed from Hugo to Asciidoctor is hardcoded.
You would have to trick Hugo somehow into passing your own arguments.
Fortunately, you don’t need to worry since
&lt;a href=&#34;https://ratfactor.com/hugo-adoc-html5s/&#34;&gt;there’s already someone out there shared the details&lt;/a&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Another problem you could encounter (and maybe bash your head against) is
the basic support for Asciidoctor itself if you don’t want to rely much on
creating hacks and workarounds.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As previously mentioned, Hugo supports Asciidoctor through external helpers.
External helpers are relatively new and more like an experimental feature.
There is a proposal on improving it by
&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/6089&#34;&gt;adding user configurations&lt;/a&gt;
so at least there’s hope for this particular feature to expand.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There’s also the fact that not all built-in feature of Hugo (such as
&lt;a href=&#34;https://gohugo.io/content-management/toc/&#34;&gt;table of contents&lt;/a&gt;) works within
Asciidoctor (and possibly other non-Markdown formats) content.
Fortunately,
&lt;a href=&#34;https://asciidoctor.org/docs/user-manual/&#34;&gt;Asciidoctor is quite extensive by itself&lt;/a&gt;
and there’s not a lot of Hugo features that doesn’t work and you won’t likely
need them anyway.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Also, native Asciidoctor front matter doesn’t work as previously mentioned.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_deploying_with_travis_ci&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_deploying_with_travis_ci&#34;&gt;&lt;/a&gt;Deploying with Travis CI&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://rgielen.net/posts/2019/creating-a-dockerized-hugo-asciidoctor-toolchain/&#34;&gt;Some&lt;/a&gt;
&lt;a href=&#34;https://axdlog.com/2018/using-hugo-and-travis-ci-to-deploy-blog-to-github-pages-automatically/&#34;&gt;posts&lt;/a&gt;
&lt;a href=&#34;https://www.martinkaptein.com/blog/hugo-with-travis-ci-on-gh-pages/&#34;&gt;are&lt;/a&gt;
&lt;a href=&#34;https://jellis18.github.io/post/2017-12-03-continuous-integration-hugo/&#34;&gt;floating&lt;/a&gt;
&lt;a href=&#34;https://insileco.github.io/2018/03/30/hugo-github-travis-a-step-in-continuous-deployment/&#34;&gt;around&lt;/a&gt;
on how to make a done-and-forget deployment toolchain with different tools.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Personally, I pass the full effort of deploying my blog to a CI/CD workflow.
I use &lt;a href=&#34;https://travis-ci.org/&#34;&gt;Travis CI&lt;/a&gt; for the job.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
You can also take a view on the &lt;a href=&#34;https://github.com/foo-dogsquared/blog&#34;&gt;GitHub repo of my blog&lt;/a&gt; for
an idea how it works on a larger picture.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s the configuration I’ve used to deploy my Hugo blog:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;dist: bionic &lt;b class=&#34;conum&#34;&gt;(1)&lt;/b&gt;
language: generic

before_install:
  - sudo apt-get update
  - sudo apt-get install ruby
  # Assuming that the GitHub API is at version 4.0 &lt;b class=&#34;conum&#34;&gt;(2)&lt;/b&gt;
  - curl https://api.github.com/repos/gohugoio/hugo/releases/latest | grep &amp;#34;hugo_extended.*deb&amp;#34; | grep &amp;#34;browser_download_url&amp;#34; | cut --delimiter=&amp;#34;:&amp;#34; --delimiter=&amp;#34;\&amp;#34;&amp;#34; --fields=4 | wget -qi -
  - sudo dpkg -i hugo*.deb
  - sudo gem install asciidoctor &lt;b class=&#34;conum&#34;&gt;(3)&lt;/b&gt;
script:
  - hugo &lt;b class=&#34;conum&#34;&gt;(4)&lt;/b&gt;
deploy: &lt;b class=&#34;conum&#34;&gt;(5)&lt;/b&gt;
  local_dir: &amp;#34;public/&amp;#34;
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN
  target_branch: gh-pages
  on:
    branch:
      - demo
      - master&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s the breakdown of the configuration:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It will use a Linux-based machine with Ubuntu Bionic (18.04) as the operating system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Downloads the latest Hugo binary from its repo through GitHub release and installs it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installs the Asciidoctor toolchain.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build the Hugo site.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deploy the build folder to the &lt;code&gt;gh-pages&lt;/code&gt; branch of my GitHub repo when the branch
occurred at &lt;code&gt;demo&lt;/code&gt; or &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
The configuration should work as long as the GitHub API version is at version 4.
You may have to do a bit of API debugging and tweaking to get it right.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Depending on the web hosting service provider, you may have to do additional work such as
pre-compressing your files or configuring your server.
Since the blog is hosted using &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;,
I don’t have to configure some stuff (unfortunately for me).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_conclusion&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That’s all of the Hugo and Asciidoctor stuff you need to know for now.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just look for more examples and you’ll get more idea.
You can take &lt;a href=&#34;https://github.com/foo-dogsquared/blog&#34;&gt;the GitHub repo of my blog&lt;/a&gt;
for a starter point.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Personally, blogging with Hugo and Asciidoctor sums up to be fun.
So fun that
&lt;a href=&#34;https://github.com/foo-dogsquared/hugo-theme-terminal-plus-minus&#34;&gt;I eventually created a theme that focuses on supporting Asciidoctor content along with other stuff&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Not perfect but it still offers a lot of satisfying and more expressive
writing experience compared to writing with Markdown.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With all of the imperfections this workflow has, there’s some stuff to look forward in the
future especially with Hugo’s external helpers feature.
Hopefully, more tools will take notice of Asciidoctor and how it could
be great for writing technical and web-based content.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_further_looking&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_further_looking&#34;&gt;&lt;/a&gt;Further looking&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_web&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_web&#34;&gt;&lt;/a&gt;Web&lt;/h3&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://asciidoctor.org/docs/&#34;&gt;&lt;em&gt;Asciidoctor documentation&lt;/em&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Getting started with Asciidoctor is quite easy with the official documentation.
It should be able to help you a long way into getting comfortable with it.
If you’re getting the ropes of it, I recommend to check out the
&lt;a href=&#34;https://asciidoctor.org/docs/user-manual/&#34;&gt;user manual&lt;/a&gt; often.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://ratfactor.com/hugo-adoc-html5s/&#34;&gt;&lt;em&gt;Better Hugo/AsciiDoc HTML&lt;/em&gt; by &lt;strong&gt;David Gauer&lt;/strong&gt; (ratfactor.com)&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;It’s a short and sweet post on how to make HTML output of Asciidoctor way better
than before with the UNIX PATH trickery trick that I’ve mentioned in the article.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://gohugo.io/documentation/&#34;&gt;&lt;em&gt;Hugo documentation&lt;/em&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The documentation of Hugo is great.
Has a lot of clear and concise information for newcomers and has an intuitive
navigation of the content structure.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_video&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_video&#34;&gt;&lt;/a&gt;Video&lt;/h3&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLLAZ4kZ9dFpOnyRlyS-liKL5ReHDcj4G3&#34;&gt;&lt;em&gt;Hugo tutorial series&lt;/em&gt; by &lt;strong&gt;Mike Dane&lt;/strong&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A video series by &lt;a href=&#34;https://www.youtube.com/channel/UCvmINlrza7JHB1zkIOuXEbw&#34;&gt;Mike Dane&lt;/a&gt;.
It’s also featured on the official Hugo documentation as a video resource.
The video series is well-done and offers brief and concise explanation.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry><entry>
    <id>https://foo-dogsquared.github.io/blog/posts/a-ricing-starting-checklist/</id>
    <title type="text">A &#39;ricing&#39; starting checklist</title>
    <link rel="alternate" href="https://foo-dogsquared.github.io/blog/posts/a-ricing-starting-checklist/" hreflang="en" title="A &#39;ricing&#39; starting checklist"/><category term="linux"/><category term="desktop"/><category term="ricing"/>
    <published>2019-08-25T18:03:43+08:00</published>
    <updated>2020-11-10T01:49:31+08:00</updated><content type="html">
&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I just started ricing at the start of August 2019.
So I made this list of things you might want to know when
getting started with ricing your setup so that I couldn’t
forget it easily.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Hopefully, it can be useful for you, too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
The listed programs is mostly applied to
Linux-based systems.
You can look for some alternatives if you’re using
anything else.
Sorry, can’t help much with that.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_a_display_server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_a_display_server&#34;&gt;&lt;/a&gt;A display server&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In order to fully make use of window programs like
Firefox, Inkscape, GIMP, Blender, and many others, you have
to install a display server (or windows server).
Otherwise, you would be stuck using with a command line.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
This is required for any setup with a graphical
desktop.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are
&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_display_servers&#34;&gt;many display servers out there&lt;/a&gt;
but one of the more popular choices are &lt;a href=&#34;https://www.x.org/wiki/&#34;&gt;Xorg&lt;/a&gt;
(an implementation of X protocol) and
&lt;a href=&#34;https://wayland.freedesktop.org/&#34;&gt;Wayland&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If your hardware is a bit old, I recommend to stick with
Xorg since it is older thus more developed than Wayland.
Wayland is still a relatively new technology still in development
but still keep an eye for it since it is meant to replace X
with simpler options.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Also, I recommend to look at their respective Arch Linux wiki entry
if you want to get started.
(Pretty much I recommend the Arch Linux wiki for most of the
Linux stuff, really.)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_a_desktop_environmentwindow_manager&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_a_desktop_environmentwindow_manager&#34;&gt;&lt;/a&gt;A desktop environment/window manager&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In order to have that graphical desktop experience, you
either need a &lt;em&gt;desktop environment&lt;/em&gt; or a &lt;em&gt;window manager&lt;/em&gt;
(or even both).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A window manager does what its name does: manages and controls
windows from its appearance, content, and behavior.
There are
&lt;a href=&#34;https://wiki.archlinux.org/index.php/window_manager&#34;&gt;many choices to choose from&lt;/a&gt;
but personally I recommend &lt;a href=&#34;https://i3wm.org/&#34;&gt;i3&lt;/a&gt;, &lt;a href=&#34;https://swaywm.org/&#34;&gt;Sway&lt;/a&gt;,
&lt;a href=&#34;https://wiki.archlinux.org/index.php/Bspwm&#34;&gt;Bspwm&lt;/a&gt;, and
&lt;a href=&#34;https://awesomewm.org/&#34;&gt;awesome&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Usually with a window manager, you can extend more stuff with it
such as a status bar and a lock screen to improve your
desktop experience.
Anyways, you should try and experiment with the configuration
of the window manager of your choosing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Meanwhile, a desktop environment is a more detailed setup
built on top of a window manager.
They have more built-in stuff like a status bar,
a session manager, a display manager, and a window manager of
their own.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Like window managers,
&lt;a href=&#34;https://wiki.archlinux.org/index.php/Desktop_environment#List_of_desktop_environments&#34;&gt;You have many choices&lt;/a&gt;
here.
For my personal recommendations, &lt;a href=&#34;https://xfce.org/&#34;&gt;Xfce&lt;/a&gt; and
&lt;a href=&#34;https://www.kde.org/plasma-desktop&#34;&gt;KDE Plasma&lt;/a&gt; is the
top-tier choices.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Usually, desktop environments let you replace their
window manager (or any of their components, if they provided
one).
For example, you can install Xfce and replace their built-in
window manager (&lt;a href=&#34;https://docs.xfce.org/xfce/xfwm4/start&#34;&gt;Xfwm&lt;/a&gt;)
with i3wm.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Don’t forget to use some themes for the desktop environment
of your choice.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Always check for the requirements of the window manager
or the desktop environment before trying it.
It can affect performance or simply won’t work because
of incompatibility.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_a_compositor&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_a_compositor&#34;&gt;&lt;/a&gt;A compositor&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/Compositing_window_manager&#34;&gt;compositor&lt;/a&gt;
(or a composite manager) is a program that provides
an off-screen buffer for application windows.
Thus, repainting and rendering application windows will mitigate
against common graphical issues such as screen tearing or leaving a
&amp;#34;trail&amp;#34; or a black block.
Those issues will be way more obvious when moving your windows or
using an application with a lot of moving parts on your screen.
(I can’t record it since it’s not present when viewing it in a video.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It can also provide additional processes with those application
windows such as adding transitions, adding animations, and
applying opacity for the windows.
In other words, it can add pizzazz to your setup.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Like window managers, always check for the requirements
before using it.
Certain compositors can only support certain setups or
will break under certain conditions in your setup.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One of the more popular compositors are
&lt;a href=&#34;https://github.com/yshui/compton&#34;&gt;Compton&lt;/a&gt; for X window system
and &lt;a href=&#34;https://swaywm.org/&#34;&gt;Sway&lt;/a&gt; for Wayland.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once you have configured the compositor, you can certainly see
some notable differences with it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since I have installed Xorg which is an implementation of the X window
system, I’m using Compton.
The following videos are demonstrations using without and with Compton
running in the background.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s a video of my setup using no Compton.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;videoblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;video src=&#34;assets/compton-less-demo.mp4&#34; width=&#34;100%&#34; controls=&#34;&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s another video of my setup using Compton this time.
Take note that it uses the default config located at
&lt;code&gt;/etc/xorg/compton.conf&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;videoblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;video src=&#34;assets/compton-demo.mp4&#34; width=&#34;100%&#34; controls=&#34;&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_a_display_manager&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_a_display_manager&#34;&gt;&lt;/a&gt;A display manager&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A display manager is a graphical interface for logging in a session.
It could be pretty useful for those who are using with multiple users
that might be intimidated with using a TTY as their first screen.
Most importantly, it could be used for additional swag.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Aside from giving the user login interface a makeover, it can also
do other things such as authenticating users and session management.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Display_manager#List_of_display_managers&#34;&gt;There is a list of choices out there&lt;/a&gt;
and my pick is &lt;a href=&#34;https://github.com/CanonicalLtd/lightdm/&#34;&gt;LightDM&lt;/a&gt;
since I find it easy to start and it does have a cool login interface.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_gui_library_themes&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_gui_library_themes&#34;&gt;&lt;/a&gt;GUI library themes&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;GUI library such as &lt;a href=&#34;https://www.gtk.org/&#34;&gt;GTK&lt;/a&gt; and
&lt;a href=&#34;https://www.qt.io/&#34;&gt;Qt&lt;/a&gt; might have a unified configuration that
describes the widgets appearance, color scheme, and fonts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ll be mainly discussing on GTK theming since a lot of widely used
programs are built with it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.gtk.org/&#34;&gt;GTK&lt;/a&gt; is a cross-platform free and open source GUI library.
Popular programs built (as of this writing) with the library include
&lt;a href=&#34;https://www.mozilla.org/en-US/firefox/new/&#34;&gt;Firefox&lt;/a&gt;,
&lt;a href=&#34;https://www.thunderbird.net/&#34;&gt;Thunderbird&lt;/a&gt;,
&lt;a href=&#34;http://www.gimp.org/&#34;&gt;GIMP&lt;/a&gt;, and &lt;a href=&#34;http://www.inkscape.org/&#34;&gt;Inkscape&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are many ways on configuring your color scheme and icon sets but
I recommend to start with &lt;a href=&#34;http://wiki.lxde.org/en/LXAppearance&#34;&gt;LXAppearance&lt;/a&gt;
or &lt;a href=&#34;https://github.com/themix-project/oomox&#34;&gt;oomox&lt;/a&gt;.
Even better you could use them to take a look at a GTK config file and edit
it yourself afterwards.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You could also not customize it and leave it to the distro.
For Arch Linux, it has Raleigh as the default GTK theme which looks
very dated if you ask me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;assets/gtk-raleigh-theme-demo.webp&#34; alt=&#34;GTK Raleigh theme&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 1. GTK Raleigh theme&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For my custom configuration, I chose the &lt;a href=&#34;https://github.com/NicoHood/arc-theme&#34;&gt;Arc&lt;/a&gt;
theme along with its &lt;a href=&#34;https://github.com/NicoHood/arc-icon-theme&#34;&gt;icon set&lt;/a&gt; simply
because they’re the popular choice. I also think the darker scheme is pretty
cool.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;assets/gtk-arc-darker-theme-demo.webp&#34; alt=&#34;GTK Arc Darker theme&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 2. GTK Arc Darker theme&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can look for more GTK themes at &lt;a href=&#34;https://www.gnome-look.org/&#34;&gt;GNOME Look&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Not all GTK-built programs follow and apply the configuration.
You could also set individual themes for each program given that they provided one.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_color_scheme_generator&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_color_scheme_generator&#34;&gt;&lt;/a&gt;Color scheme generator&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Having your own color scheme for your setup is very great.
However, if you’re inexperienced with choosing your own colors,
a color scheme generator can help.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are a lot software built for it such as &lt;a href=&#34;https://coolors.co/&#34;&gt;Coolors&lt;/a&gt;,
&lt;a href=&#34;https://color.adobe.com/create&#34;&gt;Adobe Color&lt;/a&gt;, and
&lt;a href=&#34;https://colorpalettes.net/&#34;&gt;a color pallete sharing site&lt;/a&gt; but
there are two particular program that I personally recommend
because they’re specifically made for ricing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_pywal&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_pywal&#34;&gt;&lt;/a&gt;pywal&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Enter &lt;a href=&#34;https://github.com/dylanaraps/pywal&#34;&gt;pywal&lt;/a&gt;, a program that easily generates a
color scheme and replace it with your already existing terminal setup.
You could also make some templates in order to apply it to other programs like
&lt;a href=&#34;https://github.com/DaveDavenport/rofi&#34;&gt;rofi&lt;/a&gt;, for example.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One of the most popular highlights of pywal is that you can generate color schemes
with images.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So far, I’m content with the color scheme generated from
&lt;a href=&#34;https://www.reddit.com/r/wallpapers/comments/cckpj0/i_made_this_simple_and_clean_drawing_over_the/&#34;&gt;this image&lt;/a&gt;.
It’s pretty easy on the eyes and it is also cool to be background image for
your desktop.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can certainly automate it to make it as your theme selector similar
to how &lt;a href=&#34;https://www.youtube.com/watch?v=Es79N_9BblE&#34;&gt;Luke Smith&lt;/a&gt; did with his setup.
Or just like how
&lt;a href=&#34;https://www.reddit.com/r/unixporn/comments/973qcn/i3rofipywal_automated_theme_switching_with_rofi/&#34;&gt;this ricer from &lt;code&gt;/r/unixporn&lt;/code&gt; made rofi to be the theme selector&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_wpgtk&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_wpgtk&#34;&gt;&lt;/a&gt;wpgtk&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;wpgtk, as it is described in its &lt;a href=&#34;https://github.com/deviantfero/wpgtk&#34;&gt;own GitHub page&lt;/a&gt;,
is a colorscheme, wallpaper and template manager for *nix-based systems.
It is what it is.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It can generate and manage different color scheme with
&lt;a href=&#34;https://github.com/dylanaraps/pywal&#34;&gt;pywal&lt;/a&gt; which I discussed it shortly earlier.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It can manage wallpapers and templates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Comes with a graphical user interface built with &lt;a href=&#34;https://www.gtk.org/&#34;&gt;GTK&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is a pretty cool tool and can turn ricing into a more satisfying
experience with the convenience it offers.
I fully recommend looking into this tool if you want a cool color scheme
generator and a manager for common ricing tasks.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_a_notification_system&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_a_notification_system&#34;&gt;&lt;/a&gt;A notification system&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A status bar is not enough fill up some info especially if it’s not
needed that much.
A desktop notification system could be handy for those situations.
It can also be useful for immediate feedback that is shortly
not needed after.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In order to setup a notification system working, you need two components:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;a notifier that sends notifications&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a notification daemon that recieves those notifications&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
If you’re using with a desktop environment, usually it already
has a notification system installed. Feel free to skip this section
if you want.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For the former, &lt;a href=&#34;https://developer.gnome.org/libnotify/&#34;&gt;&lt;code&gt;libnotify&lt;/code&gt;&lt;/a&gt;
(with &lt;code&gt;notify-send&lt;/code&gt;) is the toolbelt for that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For the latter, you have more choices.
In my setup, I have &lt;a href=&#34;https://dunst-project.org/&#34;&gt;Dunst&lt;/a&gt; since I see
it included in a lot of posts at &lt;code&gt;/r/unixporn&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Dunst is also easy to configure and extend.
You can change the color of the text and background, change the
appearance for notifications of varying urgency levels, and integrate
scripts that’ll run whenever a certain type of notification has been
recieved.
It’s pretty fantastic.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One very useful example in my case is making a notification for screenshots.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I made a script which takes a screenshot which will be binded with the &lt;code&gt;PrintScr&lt;/code&gt; key
which will be used in i3.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In i3, running a script takes place in the background so there’s no way to know
if the screenshot capture is a success or not unless you send some data to a
server. Simply sending a notification with &lt;code&gt;notify-send&lt;/code&gt; while running Dunst in the
background can go a long way.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;assets/dunst-screenshot-demo.webp&#34; alt=&#34;Using dunst for screenshot notifications&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 3. Using dunst for screenshot notifications&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I also made it to send notifications for delayed screenshots.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;videoblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;video src=&#34;assets/dunst-delayed-screenshot-demo.mp4&#34; width=&#34;100%&#34; controls=&#34;&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you’re curious about the screenshot script, you can find it
&lt;a href=&#34;https://github.com/foo-dogsquared/dotfiles/blob/master/.scripts/maim-screenshot.sh&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_a_dotfiles_manager&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_a_dotfiles_manager&#34;&gt;&lt;/a&gt;A dotfiles manager&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Managing your dotfiles can be tricky since different programs have
different ways on where to store their configuration files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Dotfiles simply means your configurations of the installed
programs. Its name also came from how Linux considers a file/folder
with a period in front of the name to be hidden (i.e., &lt;code&gt;.config&lt;/code&gt;,
&lt;code&gt;.vimrc&lt;/code&gt;, &lt;code&gt;.bashrc&lt;/code&gt;).
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you would continue with no tool at all, you would most likely:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;edit and manage it by hand&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;create a folder where all of your dotfiles are in and symlink it
in various locations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;create a script that’ll manage your dotfiles for you ;p&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Depending on your experience, it could be elegant or a nightmare.
Which is why I totally recommend to use a dotfiles manager.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Dotfiles&#34;&gt;You have some choices&lt;/a&gt;
(or you know create one yourself) for managing your dotfiles easily.
For me, I chose &lt;a href=&#34;https://www.gnu.org/software/stow/&#34;&gt;&lt;code&gt;stow&lt;/code&gt;&lt;/a&gt; since it is
widely distributed among Linux-based systems. The runner-up is
&lt;a href=&#34;https://github.com/TheLocehiliosan/yadm&#34;&gt;&lt;code&gt;yadm&lt;/code&gt;&lt;/a&gt; which integrates the
concepts usually found in Git.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_a_backup_tool&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_a_backup_tool&#34;&gt;&lt;/a&gt;A backup tool&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Imagine spending time for your setup that you visioned then having
to put all of that down for a ridiculous reason.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That’s what backups are for.
It’s a simple thing to backup your dotfiles whether through simple
copy-pasting it in another storage device, an online drive, or
a self-hosted server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For my dotfiles, I simply use a remote Git repo as my online &amp;#34;backup&amp;#34;.
I also have the benefit of putting my dotfiles under version control
which means I can easily experiment with my settings.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_anything_else&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_anything_else&#34;&gt;&lt;/a&gt;Anything else?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your usual programs, of course.
Your web browser, text editor, terminal, file manager, or even some
games (granted that they support it on Linux).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you feeling adventurous and want to explore more, you can
&lt;a href=&#34;https://wiki.archlinux.org/index.php/List_of_applications&#34;&gt;view this application list on Arch Linux wiki&lt;/a&gt;.
Or explore around on GitHub, GitLab, or wherever that is.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can also check out
&lt;a href=&#34;https://wiki.archlinux.org/index.php/Desktop_environment#Custom_environments&#34;&gt;this list of components&lt;/a&gt;
if you want more stuff for your desktop setup.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want some inspiration for your ricing journey, be sure
to check out &lt;a href=&#34;https://www.reddit.com/r/unixporn/&#34;&gt;&lt;code&gt;/r/unixporn&lt;/code&gt;&lt;/a&gt;.
The amount of creativity is overflowing from the community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I also have my own set of dotfiles that you can check it
up on &lt;a href=&#34;https://github.com/foo-dogsquared/dotfiles&#34;&gt;my GitHub repo&lt;/a&gt;
(also have it on &lt;a href=&#34;https://gitlab.com/foo-dogsquared/dotfiles&#34;&gt;GitLab as a mirror&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_further_looking&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_further_looking&#34;&gt;&lt;/a&gt;Further looking&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find most of the valuable stuff on &lt;a href=&#34;https://wiki.archlinux.org/&#34;&gt;Arch Linux wiki&lt;/a&gt;.
Most of the concepts apply even when you’re not using Arch Linux.
The documentation is pretty thorough and periodically updated so be sure to
check it out often.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_web&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_web&#34;&gt;&lt;/a&gt;Web&lt;/h3&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Desktop_environment&#34;&gt;&lt;em&gt;Desktop environment&lt;/em&gt; from &lt;strong&gt;Arch Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;An Arch Linux wiki entry on desktop environments.
Features a list of desktop environments with their own
wiki page and a list of components that make up a
graphical environment.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Desktop_notifications&#34;&gt;&lt;em&gt;Desktop notifications&lt;/em&gt; from &lt;strong&gt;Arch Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;An entry on desktop notifications on Arch Linux wiki.
Also contains a list of programs to look out for and
information on setting up one.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Display_manager&#34;&gt;&lt;em&gt;Display manager&lt;/em&gt; from &lt;strong&gt;Arch Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;An Arch Linux wiki entry on display managers.
Features a list of display managers with their own
wiki page.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Dotfiles&#34;&gt;&lt;em&gt;Dotfiles&lt;/em&gt; from &lt;strong&gt;Arch Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;It’s a page on Arch Wiki that shortly describes about dotfiles.
Also features a list of programs that can help you process and
manage your dotfiles.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://github.com/addy-dclxvi/i3-starterpack&#34;&gt;&lt;em&gt;i3-starterpack&lt;/em&gt; GitHub repo by &lt;strong&gt;addy-dclxvi&lt;/strong&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A great start on starting with your i3 setup and can also teach
a little of bit of ricing.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;http://brandon.invergo.net/news/2012-05-26-using-gnu-stow-to-manage-your-dotfiles.html&#34;&gt;&lt;em&gt;Using GNU Stow to Manage Your Dotfiles&lt;/em&gt; by &lt;strong&gt;Brandon Invergo&lt;/strong&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;It’s a short but sweet article on &lt;a href=&#34;https://www.gnu.org/software/stow/&#34;&gt;GNU Stow&lt;/a&gt;,
a symbolic link farm manager suitable for controlling configuration files.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/window_manager&#34;&gt;&lt;em&gt;Window manager&lt;/em&gt; from &lt;strong&gt;Arch Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;An Arch Linux wiki entry on window managers.
Provides a list of window managers with their own
wiki entry that documents the installation and configuration
process.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_video&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_video&#34;&gt;&lt;/a&gt;Video&lt;/h3&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL5ze0DjYv5DbCv9vNEzFmP6sU7ZmkGzcf&#34;&gt;i3wm series from &lt;strong&gt;Code Cast&lt;/strong&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A fantastic video series by Code Cast on getting started with i3 and ricing.
It’s a bit outdated (heads up for the part where you setup for rofi)
but most of the concepts still apply today.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry><entry>
    <id>https://foo-dogsquared.github.io/blog/posts/the-complete-linux-turnabout/</id>
    <title type="text">The complete Linux turnabout</title>
    <link rel="alternate" href="https://foo-dogsquared.github.io/blog/posts/the-complete-linux-turnabout/" hreflang="en" title="The complete Linux turnabout"/><category term="linux"/><category term="desktop"/><category term="ricing"/>
    <published>2019-08-20T20:50:18+08:00</published>
    <updated>2020-11-10T01:49:31+08:00</updated><content type="html">
&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ever since I found some good stuff at Linux, I wiped out my
hard drive completely, exclusively install a Linux-based
machine, and left Microsoft Windows behind.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s some details and experiences about my complete turnaround
for my computer workflow:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_my_new_os&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_my_new_os&#34;&gt;&lt;/a&gt;My new OS&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I used to dual-boot my machine with Windows and whatever Linux-based
distro I was comfortable to use at the time. For the last 8 months or so,
I’ve been using &lt;a href=&#34;https://manjaro.org/&#34;&gt;Manjaro&lt;/a&gt; only because of the
&lt;a href=&#34;https://wiki.archlinux.org/index.php/Arch_User_Repository&#34;&gt;Arch User Repository&lt;/a&gt;
which has a large selection of software while not fully tipping my toe into
using Arch Linux and the effort of maintaining it is minimal because it
abstracts it away from you. Not to mention the
&lt;a href=&#34;https://www.archlinux.org/packages/&#34;&gt;official package list of Arch Linux&lt;/a&gt; is also
a beast. It was the best of both worlds.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;At the end, it didn’t work out since I found out 8 months later that Manjaro
withholds the recently released/upgraded software from Arch Linux before updating
their own for security reasons. That didn’t go well for me since I thought it’s
doesn’t really hold the point of using Arch-based distros anymore so I thought to
dive into the OG of Arch-based distros: &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; itself.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In my first few days, installing Arch Linux is a difficult task especially I have
no idea how Linux works in the grand picture. I was looking up to the
&lt;a href=&#34;https://wiki.archlinux.org/&#34;&gt;Arch Wiki&lt;/a&gt; in my phone all day at the time double-checking
every time I step up one more step in the instructions. I took me about 5 installations
before I got it correctly and cruise through without much worrying.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Booting up a functional Arch Linux that I tried and installed is a challenge well
done and satisfied with.
It seriously feels good when I got it working.
Not to mention that I gain some nuts and bolts knowledge on Linux as well.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_my_newfound_workflow&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_my_newfound_workflow&#34;&gt;&lt;/a&gt;My newfound workflow&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since a fresh installation of Arch Linux is very minimal, I took it as an
opportunity to have a completely new set of programs to fiddle with.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first thing in consideration is a desktop environment but I saw
an alternative way of using a &amp;#34;desktop&amp;#34; with
&lt;a href=&#34;https://wiki.archlinux.org/index.php/window_manager&#34;&gt;window managers&lt;/a&gt;.
Since my workflow is simple and I don’t need more fancy getup that one usually gets
from DEs, I decided to try it out for some change.
And it was cool.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_first_window_manager&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_first_window_manager&#34;&gt;&lt;/a&gt;First window manager&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I decided to use &lt;a href=&#34;https://i3wm.org/&#34;&gt;i3&lt;/a&gt; for my first window manager.
The first time I use it doesn’t bring up a bad experience.
It was easy to adapt to it since I’m completely used to using programs
that live in a command line interface like &lt;a href=&#34;https://www.vim.org/&#34;&gt;Vim&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;assets/i3-setup.webp&#34; alt=&#34;My i3 setup&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 1. My i3 setup&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;i3 also offers a level of &lt;a href=&#34;https://i3wm.org/docs/userguide.html&#34;&gt;configuration&lt;/a&gt;
that could make you a bit more efficient.
In my case, I set up a mode that’ll easily let me open my usual programs with
only two key strokes like the following examples:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Ctrl + Super&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; will open &lt;a href=&#34;https://www.mozilla.org/en-US/firefox/new/&#34;&gt;Firefox&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Ctrl + Super&lt;/code&gt; then &lt;code&gt;t&lt;/code&gt; will open &lt;a href=&#34;https://www.thunderbird.net/&#34;&gt;Thunderbird&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Ctrl + Super&lt;/code&gt; then &lt;code&gt;a&lt;/code&gt; will open my file manager (&lt;a href=&#34;https://docs.xfce.org/xfce/thunar/start&#34;&gt;Thunar&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;and so on…​&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I also set up some keybindings that I usually use in my previous setup like
a screenshot capture with &lt;a href=&#34;https://github.com/naelstrof/maim&#34;&gt;maim&lt;/a&gt;,
video capture with &lt;a href=&#34;https://obsproject.com/&#34;&gt;OBS Studio&lt;/a&gt;, and
quick switching of windows and workspaces back and forth.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_status_bar&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_status_bar&#34;&gt;&lt;/a&gt;Status bar&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Along with the keybindings, I also put a status bar usually seen in
desktop environments.
I decided to use the i3bar since it came in by default with i3.
Then I use i3status (also came by default with i3) to fill up some
usually needed information like audio volume loudness, remaining disk
space for root and for home, and RAM and CPU usage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It took a while to configure it but I seriously liking the pace around it so far.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;assets/i3bar-appearance.webp&#34; alt=&#34;The resulting i3bar setup&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 2. The resulting i3bar setup&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_application_launcher&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_application_launcher&#34;&gt;&lt;/a&gt;Application launcher&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;My personal desktop experience wouldn’t be complete without an application launcher.
So I considered &lt;a href=&#34;https://github.com/DaveDavenport/rofi&#34;&gt;&lt;code&gt;rofi&lt;/code&gt;&lt;/a&gt; to be my best friend on
the matter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;By default, i3 uses &lt;a href=&#34;http://tools.suckless.org/dmenu&#34;&gt;&lt;code&gt;dmenu&lt;/code&gt;&lt;/a&gt; as the application launcher
but I replaced it with rofi since I find it more intuitive and easier to configure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I also made rofi to look like a start menu you usually find in desktop environments like
&lt;a href=&#34;http://www.xfce.org/&#34;&gt;Xfce&lt;/a&gt; or &lt;a href=&#34;https://wiki.archlinux.org/index.php/KDE&#34;&gt;KDE&lt;/a&gt;.
It’s not too shabby if I say so myself.
It’s quite usable with rofi’s sidebar mode where you can find windows, desktop entries,
binaries, and even SSH configs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;assets/rofi-setup.webp&#34; alt=&#34;Customized rofi menu&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 3. Customized rofi menu&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find
&lt;a href=&#34;https://github.com/foo-dogsquared/dotfiles/tree/master/rofi&#34;&gt;my rofi config on my GitHub repo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_desktop_background&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_desktop_background&#34;&gt;&lt;/a&gt;Desktop background&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It wouldn’t have the complete desktop experience without a desktop background.
Fortunately, it’s easier done than said.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For the desktop background, I use &lt;a href=&#34;http://feh.finalrewind.org/&#34;&gt;feh&lt;/a&gt; to easily set it
up with the following line in my i3 config file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;exec_always feh --bg-scale ~/wallpapers/sand.jpg&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you’re curious about the wallpaper, you can view it
&lt;a href=&#34;https://www.reddit.com/r/wallpapers/comments/co9t14/sand/&#34;&gt;in this page&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_other_details&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_other_details&#34;&gt;&lt;/a&gt;Other details&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are still many details left on how my i3 configuration turned out to
be so &lt;a href=&#34;https://github.com/foo-dogsquared/dotfiles/blob/master/i3/config&#34;&gt;here’s my i3 config file&lt;/a&gt;
if you want to see more of it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to get started on i3, I recommend to look into the
&lt;a href=&#34;https://i3wm.org/docs/userguide.html&#34;&gt;user guide&lt;/a&gt; often.
It has a fantastic introduction and documentation to begin with.
I don’t think I need to make a post detailing on it, it’s too nice and beautiful.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I also recommend looking into the
&lt;a href=&#34;https://github.com/addy-dclxvi/i3-starterpack&#34;&gt;&lt;code&gt;i3-starterpack&lt;/code&gt; GitHub repo by &lt;strong&gt;addy-dclxvi&lt;/strong&gt;&lt;/a&gt;.
It has a great introduction to get started with your i3 setup.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_a_turnaround_for_the_terminal&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_a_turnaround_for_the_terminal&#34;&gt;&lt;/a&gt;A turnaround for the terminal&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With a new workflow, comes a new terminal setup.
I used to just leave my terminal setup by default since I don’t want to
break things by then.
But because of the minimal setup Arch Linux provides at the very start,
it’s a safe bet to be experimental.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_alacritty&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_alacritty&#34;&gt;&lt;/a&gt;Alacritty&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This time, I tried to stick with a new terminal emulator (or terminal, for short
which I’ll refer to it by this point).
Initially, I chose &lt;a href=&#34;https://sw.kovidgoyal.net/kitty/&#34;&gt;Kitty&lt;/a&gt; because
it’s a GPU-based terminal.
Eventually, I switched to &lt;a href=&#34;https://github.com/jwilm/alacritty/&#34;&gt;Alacritty&lt;/a&gt;
because it’s faster on my machine and it supports
&lt;a href=&#34;https://github.com/be5invis/iosevka&#34;&gt;Iosevka&lt;/a&gt;, a beautiful font set I recently discovered.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The configuration for my terminal is only through fonts and color scheme.
So there’s really nothing to discuss here.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_vim&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_vim&#34;&gt;&lt;/a&gt;Vim&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.vim.org/&#34;&gt;Vim&lt;/a&gt; has a reputation for being a meme in the text editors field.
It has unintuitive user experience especially against modern text editors like
&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt; or &lt;a href=&#34;https://atom.io/&#34;&gt;Atom&lt;/a&gt;
without some manual reading beforehand.
It also has unconventional controls due to the modal philosophy it adheres to.
However, take time to master it and you’ll be speeding through for most of the
time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I use Vim mostly for writing documents that relies on text formatting languages
like &lt;a href=&#34;https://daringfireball.net/projects/markdown&#34;&gt;Markdown&lt;/a&gt; and
&lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt;.
My main case, however, is for writing LaTeX.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After I saw &lt;a href=&#34;https://castel.dev/post/lecture-notes-1/&#34;&gt;this post by &lt;strong&gt;Gilles Castel&lt;/strong&gt;&lt;/a&gt;,
I inspired to learn more about Vim since I was also learning LaTeX at the time.
A few weeks later and I was comfortable with my own workflow.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s a few details about it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I use &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;&lt;code&gt;vim-plug&lt;/code&gt;&lt;/a&gt; as the plugin
manager.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For writing LaTeX, I use &lt;a href=&#34;https://github.com/lervag/vimtex/&#34;&gt;&lt;code&gt;vimtex&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I use &lt;a href=&#34;https://pwmt.org/projects/zathura&#34;&gt;&lt;code&gt;zathura&lt;/code&gt;&lt;/a&gt; as the live LaTeX viewer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I choose &lt;a href=&#34;https://github.com/sirver/UltiSnips&#34;&gt;&lt;code&gt;UltiSnips&lt;/code&gt;&lt;/a&gt; as my snippets manager.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I use &lt;a href=&#34;https://github.com/907th/vim-auto-save&#34;&gt;&lt;code&gt;vim-auto-save&lt;/code&gt;&lt;/a&gt; for autosaving
my files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I use &lt;a href=&#34;https://github.com/scrooloose/nerdtree&#34;&gt;&lt;code&gt;nerdtree&lt;/code&gt;&lt;/a&gt; for a built-in
file browser.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I have &lt;a href=&#34;https://github.com/vim-airline/vim-airline&#34;&gt;&lt;code&gt;vim-airline&lt;/code&gt;&lt;/a&gt; as the
status bar. It’s pretty cool looking.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;assets/vim-setup.webp&#34; alt=&#34;Fullscreen Vim setup&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 4. Fullscreen Vim setup&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to take a deeper look or just want to see the full config,
&lt;a href=&#34;https://github.com/foo-dogsquared/dotfiles/tree/master/vim&#34;&gt;you can see it in my dotfiles repo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_ranger&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_ranger&#34;&gt;&lt;/a&gt;ranger&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I discovered another cool program that lives in the terminal:
&lt;a href=&#34;http://ranger.github.io/&#34;&gt;ranger&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It’s a complete file browser with Vim-inspired controls.
It also comes with its own file opener for figuring out which applications
to open for a certain file type.
Both of the file browser and file opener are configurable which
you can edit it with a simple text editor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you know how to use Vim, you mostly know how to use ranger.
The way how you go around a file in Vim is quite similar to how you
explore around a filesystem with Ranger.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s some examples of the similarities:&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 33.3333%;&#34;/&gt;
&lt;col style=&#34;width: 33.3333%;&#34;/&gt;
&lt;col style=&#34;width: 33.3334%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Keybinding&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Vim action&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;ranger action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;gg&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;go to the beginning of the file&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;go to the beginning of the file list&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;G&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;go to the last line&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;go to the last file in the list&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;dd&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;cut the current line&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;cut the current file selection&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;yy&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;yank (copy) the current line&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;yank (copy) the current file&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;v&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;selecting text&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;selecting files&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;i&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;insert text&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;rename and insert text of the selected file&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Like Vim, if you master the controls, you would be faster exploring
the filesystem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s a quick demo of how you explore between different partitions
from home to my blog in another partition back to my dotfiles in
the home directory.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;videoblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;video src=&#34;assets/ranger-demo.mp4&#34; width=&#34;100%&#34; controls=&#34;&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_low_key_ricing&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_low_key_ricing&#34;&gt;&lt;/a&gt;Low-key ricing&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ever since I got my i3 setup to be practically functional, I’ve dug a rabbithole
of configuring the little details for most of the time.
I’ve been considering things such as a compositor, application launcher,
screenshot tool, keybinding tool, and a replacement for my status bar
(which I didn’t by the end of the day).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That’s when I discovered &lt;a href=&#34;https://www.reddit.com/r/unixporn/&#34;&gt;&lt;code&gt;/r/unixporn&lt;/code&gt;&lt;/a&gt;,
a subreddit for showing off your *Nix (i.e., Linux, MacOS) configurations and setup.
It’s also a community for &amp;#34;ricing&amp;#34;, an act of adding the visual spices to your setup.
I recommend to check it out if you’re looking for a starting point.
They’re pretty friendly for first timers, too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It’s a satisfying experience seeing my setup to be prettier (and more functional)
with each revision.
More programs come and go to my experimental workflow and eventually settle with a
(hopefully) functional setup.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_a_new_leaf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_a_new_leaf&#34;&gt;&lt;/a&gt;A new leaf&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I said that the reason I’ve gone full Linux is due to me finding some
good alternatives to the programs I usually use (except
&lt;a href=&#34;https://visualstudio.com/&#34;&gt;Visual Studio&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With this in mind, let me quickly list a bunch of programs that truly
stand out for me:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freecadweb.org/&#34;&gt;FreeCAD&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blender.org/&#34;&gt;Blender&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://musescore.org/&#34;&gt;MuseScore&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://inkscape.org/&#34;&gt;Inkscape&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://krita.org/en/&#34;&gt;Krita&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.videolan.org/vlc/&#34;&gt;VLC Media Player&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.thunderbird.net/&#34;&gt;Thunderbird&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.latex-project.org/&#34;&gt;LaTeX&lt;/a&gt; (with
&lt;a href=&#34;https://www.tug.org/texlive/&#34;&gt;TeX Live&lt;/a&gt; as the LaTeX distro)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://obsproject.com/&#34;&gt;OBS Studio&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;…​and so much more!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can the full list on my &lt;a href=&#34;https://github.com/foo-dogsquared/dotfiles&#34;&gt;dotfiles&lt;/a&gt;
README.
I think you get the point.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_conclusion&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Having a full-on Linux system is pretty awesome especially these days where
there are feature-complete software that is being developed given away for free
and have its code open to the public.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I made my migration since I found so much good stuff at Linux and it
doesn’t worth the effort to make my machine dual-boot it with Windows just
to use one program.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry><entry>
    <id>https://foo-dogsquared.github.io/blog/posts/a-site-overhaul-has-occurred/</id>
    <title type="text">A site overhaul has occurred</title>
    <link rel="alternate" href="https://foo-dogsquared.github.io/blog/posts/a-site-overhaul-has-occurred/" hreflang="en" title="A site overhaul has occurred"/><category term="self"/><category term="meta"/>
    <published>2019-08-15T18:10:07+08:00</published>
    <updated>2020-11-05T12:37:04+08:00</updated><content type="html">
&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ANNOUNCEMENT: A site overhaul has occurred. Please
see the changelog. A site overhaul has occurred.
Please see the changelog.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_from_jekyll_to_hugo&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_from_jekyll_to_hugo&#34;&gt;&lt;/a&gt;From Jekyll to Hugo&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First and foremost, the blog has moved from
&lt;a href=&#34;https://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt; to &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.
I could create a theme but it would take me way longer
than should just to migrate the blog so for now I settled
with the &lt;a href=&#34;https://themes.gohugo.io/hugo-theme-terminal/&#34;&gt;Terminal&lt;/a&gt;
since I’m starting to appreciate terminal-themed websites
(also, I think it’s easier for me to design a terminal-themed website
if I have to create one).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ve ported the blog to Hugo for multitude of reasons:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Speed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ease of content management&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More organized approach for my content&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Built-in support for blogging with &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Built-in support for &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;Asciidoctor&lt;/a&gt; although
it’s mostly done through calling external programs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Though Jekyll &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;does have a plug-in for blogging with Asciidoctor&lt;/a&gt;,
I don’t really want another plug-in for that. I just want a
static site generator with built-in support for blogging with Asciidoctor and
Hugo just provides that. The speed and ease of configuration is
also a really large bonus.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_change_of_purpose&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_change_of_purpose&#34;&gt;&lt;/a&gt;Change of purpose&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The blog is in hiatus due to me taking notes in
&lt;a href=&#34;https://www.latex-project.org/&#34;&gt;LaTeX&lt;/a&gt; now and a change of
purpose for my blog. I already have a
&lt;a href=&#34;https://github.com/foo-dogsquared/personal-notes/&#34;&gt;a storage for my notes&lt;/a&gt;
and
&lt;a href=&#34;https://github.com/foo-dogsquared/a-remote-repo-full-of-notes-of-things-i-do-not-know-about/&#34;&gt;another for my lecture/detailed notes&lt;/a&gt;
so I don’t see any point to make this as an all-around notes notebook.
It’s too repetitive to have it around so the vision for my blog
has changed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s what I think my online notes should be divided with these three
outlets:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My notes storage would be short/slightly detailed notes on random things.
This is basically where my &lt;em&gt;Simplified!&lt;/em&gt;-type of notes should get in.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My lecture notes are where detailed studies of subjects or concepts
should go.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My blog will be about…​ I don’t know, really. I do have a set of ideas that I
think it’s suitable for blogging about it so let’s just find out along the
way.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_blog_clean_up_and_revision&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_blog_clean_up_and_revision&#34;&gt;&lt;/a&gt;Blog clean-up and revision&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since the overall purpose of the blog has been changed, so does the little
details that make up the blog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ve cleaned up my blog by removing most of the posts that I think it’s not
suitable for the blog anymore. The &lt;em&gt;Learnings and Resources&lt;/em&gt; series will be reset
(starting this month) with a couple of revisions and improvement for the reading experience.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;em&gt;Simplified!&lt;/em&gt; series is still going to be up and coming with revisions and a new
style of technical writing. My &lt;a href=&#34;https://github.com/foo-dogsquared/personal-notes/&#34;&gt;personal notes&lt;/a&gt;
is still going to have the style of &lt;em&gt;Simplified!&lt;/em&gt; series I was originally going for.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ve been thinking about revising my writing style as well. I mostly view my
current style as too verbose. I’ve learned that it’s became a
pain to read for my future self if I were to revisit a concept/study again.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the revised writing style, I also want to improve my writing by adopting a new
writing workflow. This is basically the stuff you would encounter in a high school
writing class but I’ve been less compliant with it over the last few posts (before the
change).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_conclusion&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The blog is under change and it’s not suitable to be a student’s notebook anymore and
it goes on to my &lt;a href=&#34;https://github.com/foo-dogsquared/personal-notes/&#34;&gt;online&lt;/a&gt;
&lt;a href=&#34;https://github.com/foo-dogsquared/a-remote-repo-full-of-notes-of-things-i-do-not-know-about/&#34;&gt;notes&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Along with the change of purpose is a change of style and presentation for my
studies. Starting with the last quarter of the year is taking the more challenging route
for improvement and hopefully this change reflect that as well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Well, I still don’t know how to end this post so have a nice day! :)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry><entry>
    <id>https://foo-dogsquared.github.io/blog/posts/developing-projects-with-free-resources/</id>
    <title type="text">Developing projects with free resources</title>
    <link rel="alternate" href="https://foo-dogsquared.github.io/blog/posts/developing-projects-with-free-resources/" hreflang="en" title="Developing projects with free resources"/><category term="projects"/><category term="development"/>
    <published>2019-04-30T12:32:40+08:00</published>
    <updated>2020-11-05T12:37:04+08:00</updated><content type="html">
&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In a world where technology has made it possible to inform and share experiences with other people through multiple devices, the technology sure came to advance at a point where the people themselves have the resources needed to establish and maintain businesses on their garage or bedroom.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The same can be said with creating projects.
Being a student on a financial tightrope, it will be a fun and frustrating challenge to create projects with only free resources and services.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this article, I’ll share my experiences and tools I’ve used throughout my side-project and self-learning development journey while getting around paid services.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_planning_my_projects&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_planning_my_projects&#34;&gt;&lt;/a&gt;Planning my projects&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Planning is a part of the process.
It’s an ever-important process that prevents your software project (or any project) to be an aftermath of a great natural disaster.
It’s not guaranteed for your project to go smooth accordingly but it’s better to have a plan than going straight into the battlefield.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
There are only 4 rules you need to remember: make the plan, execute the
plan, expect the plan to go off the rails, throw away the plan.
&lt;/blockquote&gt;
&lt;div class=&#34;attribution&#34;&gt;
— Captain Cold
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If the plan failed, just go through another planning phase.
The action does not apply well into a production workflow with the chaotic and larger-scale management but it can be easily apply for personal projects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here are the tools I’ve used to practice my planning skills:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_quire&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_quire&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://quire.io/&#34;&gt;Quire&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Quire is an online tool for almost everything productivity-based. I mean
they got &lt;a href=&#34;https://quire.io/features&#34;&gt;an exhaustive list of features&lt;/a&gt; from
kanban boards, simple task lists, integration to different services such
as GitHub, Google Drive, and Slack, and much more!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The best part about all of this is that it looks minimalistic with all
of its features. It goes out of your way with all of its features to use
as you intended. You want to look at your task board for your project
and the website only shows you that.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_inkscape&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_inkscape&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://inkscape.org/&#34;&gt;Inkscape&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Inkscape is a vector graphics tool and a free and open source software (FOSS) in similar veins of &lt;a href=&#34;https://www.adobe.com/products/illustrator.html&#34;&gt;Adobe Illustrator&lt;/a&gt;.
It’s a neat tool suited for a variety of basic tasks related for vector graphics: icon art, visual aids, and even &lt;a href=&#34;https://wiki.inkscape.org/wiki/index.php/LaTeX&#34;&gt;mathematical equations&lt;/a&gt;.
I find Inkscape more approachable than Illustrator, further enhanced by its welcoming community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It also offers extensiblity through plugins and gathered a community of designers and developers that extend Inkscape for their own needs (and maybe yours).
I’ve mainly used Inkscape for creating diagrams and visual aids (and a little bit of vector art for practice).
Though, using Inkscape for diagramming can be tricky and unintuitive so I recommend &lt;a href=&#34;https://app.diagrams.net/&#34;&gt;diagrams.net&lt;/a&gt; (formerly known as draw.io).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_good_ol_pen_paper&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_good_ol_pen_paper&#34;&gt;&lt;/a&gt;Good ol&amp;#39; pen &amp;amp; paper&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Well, all I need is a way of planning for my project.
Cite a better way of planning than a good ol&amp;#39; P&amp;amp;P.
One of its most useful feature is that it’s quick to load!
No internet connection needed!
It’s a universal alternative to all the apps listed so far.
The only situation you’re not able to boot this up is if you don’t have the materials yourself.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In all seriousness though, I think this is one of the most useful ones.
Physically writing is actually more memorable (to me, at least) thus more things to remember.
Besides, I don’t want to stare at a digital screen all day.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Usually when I’m going to plan with this method, I follow through a system I created for myself.
The system is nothing fancy, it’s a simple priority task queue where I categorized whether the task is a low-hanging fruit, an afterthought, or a requirement.
You could represent this with symbols, colored papers, or birds.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_creating_my_projects&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_creating_my_projects&#34;&gt;&lt;/a&gt;Creating my projects&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you have a plan in place, you can attack it in your own pace.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The following list is only for software projects but I recently launched &lt;a href=&#34;https://freebies-hunt.netlify.app/&#34;&gt;a website that lists all of the free resources and tools&lt;/a&gt; I’ve used for a variety of tasks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_visual_studio_code&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_visual_studio_code&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;My go-to text editor and lightweight IDE.
This tool is just phenomenal!
It’s free and &lt;a href=&#34;https://github.com/Microsoft/vscode&#34;&gt;open source&lt;/a&gt;, &lt;a href=&#34;https://code.visualstudio.com/updates/&#34;&gt;actively being developed&lt;/a&gt;, backed up by a huge community of developers, solid UI/UX for budding developers, &lt;a href=&#34;https://code.visualstudio.com/docs&#34;&gt;features an extensive documentation&lt;/a&gt;, and offers hackability that extends the app even further.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With that said, this tool is not a panacea for our development tool problems.
The core scope is on web development when you look at the feature set: JavaScript and TypeScript support, built-in &lt;a href=&#34;https://www.emmet.io/&#34;&gt;Emmet&lt;/a&gt; plugin, and built-in HTML and CSS support.
Thankfully, Visual Studio Code has accumulated an ecosystem of quality plugins over the past years so things like adding support for a certain language like Rust, C++, or Java can be acquired.
Along with some helpful utilities like &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=James-Yu.latex-workshop&#34;&gt;LaTeX workflow&lt;/a&gt;, &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=vscodevim.vim&#34;&gt;Vim emulation&lt;/a&gt;, and &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig&#34;&gt;EditorConfig&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_git&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_git&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Well, we all have our ways in saving our stuff.
A certain XKCD comic said it best how I used to do it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://imgs.xkcd.com/comics/documents.png&#34; alt=&#34;documents&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 1. My archiving skills in high school&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Other would use a software that can automatically create backups.
For solo projects, it is practical enough but if you want to amp your version controlling skill then you can use a full-on &lt;strong&gt;version control system&lt;/strong&gt; (VCS).
One objective of using a version control system like Git is not only acts as an epic save button but it also makes collaborative works to progress smoother.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Git is my go-to version control software.
It is nice to work with and it has ton of free services that are integrated with it.
Despite it’s mostly used for software projects, it can be useful for non-software stuff though better and more specialized solutions may exist.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_publishing_my_project&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_publishing_my_project&#34;&gt;&lt;/a&gt;Publishing my project&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want your project to be available for the whole world to see, you have available free options that lets you do that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_github&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_github&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you want to share your project with the world for everyone to see, you need a platform to do that.
One of the popular options for that is GitHub (which requires using Git but it’s ubitiquous nowadays).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;GitHub offer practically free unlimited public and private repo (with limited collaborators) for your projects.
Whether you want to show off your projects or to keep your projects safe in the cloud, GitHub has you covered.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Being a software development platform, it has a variety of features to aid software development such as issue tracking, code reviews, automation with &lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt;, and built-in project management tools.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you’re looking for an alternative to GitHub, here’s some other Git-based web hosting sites:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab&lt;/a&gt; is probably the closest competitor to GitHub sporting a similar set of features.
What’s more, you can spin your own GitLab instance in case you want your own Git platform.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/&#34;&gt;Bitbucket&lt;/a&gt; is another competitor to GitHub.
Its core feature set is quite similar to GitLab: having built-in CI/CD tools, can be self-hosted, and has a ton of built-in integration with other services such as Trello and Slack.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_heroku&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_heroku&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://heroku.com/&#34;&gt;Heroku&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you’re looking to deploy your dynamic web app, look no further to Heroku.
Heroku offers an infrastructure as a service that is made sure to be as easy as possible and it is sure easy in my experience so far.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Heroku just needs a Git repo and you’re mostly done.
Just tweak the app further, store your secret credentials, enable related services for your app, and your app will set ablaze live (or crash) on the web.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you’re looking for other hosts that support multiple languages and setup, have a look at the following list.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://glitch.com/&#34;&gt;Glitch&lt;/a&gt; — One of the coolest alternative to Heroku.
It’s another app deployment platform but with the sense of community mixed in.
However, it’s not suitable for production deployment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zeit.co/now&#34;&gt;Now&lt;/a&gt; is an app deployment service from Zeit.
It offers a platform to deploy your web apps though you have to integrate it with your app instead of just placing your app and letting it run.
Like Heroku, it also offers a generous free tier that is mostly enough for managing multiple hobby projects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt; offers a generous free tier which can take a while before reaching the limit if you’re deploying a few personal dev projects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://repl.it/&#34;&gt;Repl.it&lt;/a&gt; — Possibly one of the best alternatives to Heroku.
Similar to Glitch, it’s an online IDE that &lt;a href=&#34;https://repl.it/site/languages&#34;&gt;supports a lot of languages&lt;/a&gt; and it got
&lt;a href=&#34;https://repl.it/discord&#34;&gt;a community of hackers behind it&lt;/a&gt;.
It’s a pretty cool tool especially for hobby projects, personal demos, and such.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_netlify&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_netlify&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to publish your static website, no need to deploy it with Heroku since it’ll just add to your monthly quota.
&lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt; is one of the perfect platforms for that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Like Heroku, Netlify is a platform that aims to make web app deployment as easy as possible.
Just create an account, login to Netlify, integrate your Git repo, and give configurations for deployment then celebrate!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It offers out-of-the-box integration with common web workflow like task runners and Git repos and &lt;a href=&#34;https://www.netlify.com/products/build/&#34;&gt;automates them through a work pipeline&lt;/a&gt;, doing all the work for you.
It’s pretty fantastic especially if you’re working solo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Of course, &lt;a href=&#34;https://www.netlify.com/pricing/&#34;&gt;Netlify offers a generous free tier&lt;/a&gt; limiting your account up to 100GB bandwidth for your list of
deployed projects.
For me, that is more than enough.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Of course, tons of alternatives are available but here’s the following that topped the list for me:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://surge.sh/&#34;&gt;Surge&lt;/a&gt; — One of the more popular static site
deployment tool. It’s simply a deployment tool available in the command
line. Also provides out-of-the-box integration with common workflows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; offers similarly generous resources for your static apps.
If you’re mainly a &lt;a href=&#34;https://gitlab.com&#34;&gt;GitLab&lt;/a&gt; user, &lt;a href=&#34;https://docs.gitlab.com/ee/user/project/pages/&#34;&gt;GitLab also offers a similar service&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zeit.co/now&#34;&gt;Now&lt;/a&gt; is still one of them.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With all of those above, you’re practically set for life in your webdevelopment learning journey.
It’s pretty amazing that we get these stuff for FREE, mind you.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_conclusion&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There’s my general workflow in its glory using only with (mostly) free and open source technologies.
There’s a lot more things to keep an eye on especially if you’re looking for a specific set of technologies or needs.
If you’re looking for more open content, I can point you to the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sindresorhus/awesome&#34;&gt;&lt;code&gt;awesome&lt;/code&gt;&lt;/a&gt; — A list of
resource list of various technologies and topics from software
development, music, research, to game development. You should be able to
get a start of your search of open content from there.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It’s a shameless plug but &lt;a href=&#34;https://freebies-hunt.netlify.com/&#34;&gt;Freebies Hunt&lt;/a&gt; is a personally curated list of free resources that I’ve used for a variety of tasks including music production, 3D modelling, and art.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One of the most beneficial things on free and open content today is that they’re easily accessible as they’re easily created.
Not only that it does help on making the technology to easily create interest on the public but also to create progress by everyone.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry><entry>
    <id>https://foo-dogsquared.github.io/blog/posts/a-freebies-resource-list-mostly-related-to-programming/</id>
    <title type="text">A freebie&#39;s resource list (mostly related to programming)</title>
    <link rel="alternate" href="https://foo-dogsquared.github.io/blog/posts/a-freebies-resource-list-mostly-related-to-programming/" hreflang="en" title="A freebie&#39;s resource list (mostly related to programming)"/><category term="bookmarks"/><category term="freebies"/>
    <published>2018-05-01T09:25:57+08:00</published>
    <updated>2020-11-05T12:37:04+08:00</updated><content type="html">
&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;UPDATE: This list is now deprecated. It’ll recieve minimal maintenance,
if there’s any. Any new updates are now actively developed in my
&lt;a href=&#34;http://freebies-hunt.netlify.com/&#34;&gt;new freebies resource site&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is a free resource list that gradually grew over the past few
months. Admittedly, I don’t use all of them so why not just share it,
right?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just pick a few, don’t be overwhelmed by the number of resource you have
to refer to. Focus on one thing at a time. Well, the list is actually
longer but I decided to pick the top contenders of the list (and some of
them are still not being used, I just like to bookmark stuff and never
checking out again sometimes).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Do keep in mind, most of them are related to computer programming but
some of the providers offer stuff outside of programming (say
&lt;a href=&#34;https://khanacademy.org&#34;&gt;Khan Academy&lt;/a&gt; for math).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_other_resource_lists&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_other_resource_lists&#34;&gt;&lt;/a&gt;Other Resource Lists&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sindresorhus/awesome&#34;&gt;awesome&lt;/a&gt; — &lt;strong&gt;(very much
recommended)&lt;/strong&gt;; it’s a curated list of lists; I guess you can say it’s
&lt;strong&gt;awesome&lt;/strong&gt;, mwehehehehehehehe…​ 😎&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/math/comments/2mkmk0/a_compilation_of_useful_free_online_math_resources/&#34;&gt;A
Compilation of Useful, Free, Online Math Resources from /r/math&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/learnmath/comments/8p922p/list_of_websites_ebooks_downloads_etc_for_mobile/&#34;&gt;List
of websites, ebooks, downloads, etc. for mobile users and people too
lazy to read the sidebar from /r/learnmath&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/free-stuff/500-free-things-on-the-internet-to-start-your-new-year-11ae72266b66&#34;&gt;This
list on Medium&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/BestofSoftwares/comments/6084vh/list_of_the_best_free_things_online_everyone_can/&#34;&gt;List
of the best free things online everyone can take advantage of on
/r/BestOfSoftwares&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/learnprogramming/wiki/tools&#34;&gt;This specialized
list for programming on Reddit&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sdmg15/Best-websites-a-programmer-should-visit/&#34;&gt;Useful
websites for programmers (by &lt;em&gt;sdmg15&lt;/em&gt; on GitHub)&lt;/a&gt; — also here’s
&lt;a href=&#34;https://dev.to/sahilrajput/useful-websites-for-programmers-36k#coding-practice-for-beginners&#34;&gt;an
mirror article by &lt;em&gt;Sahil Rajput&lt;/em&gt; on dev.to&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dargaCode/WebDevStudyResources&#34;&gt;Web Dev’t Study
Resources (by &lt;em&gt;dargaCode&lt;/em&gt; on GitHub)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_online_education_resources&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_online_education_resources&#34;&gt;&lt;/a&gt;Online Education Resources&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://edex.adobe.com/en/professional-development/courses&#34;&gt;Adobe
Education Exchange&lt;/a&gt; — free courses offered by Adobe and its community&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://brilliant.org&#34;&gt;Brilliant&lt;/a&gt; — kind of like those MOOC but they
teach you through solving problems&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.codecademy.com/&#34;&gt;Codecademy&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cccoer.org/&#34;&gt;Community College Consortium for Open
Educational Resources&lt;/a&gt; — you can find it
&lt;a href=&#34;https://www.cccoer.org/learn/find-oer/&#34;&gt;here&lt;/a&gt; for the most part if you
want the open educational resources (OER)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://coursera.org&#34;&gt;Coursera&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://cs50.harvard.edu/&#34;&gt;CS50 Course by Harvard University&lt;/a&gt; — &lt;strong&gt;(very
much recommended)&lt;/strong&gt;; a very good introductory course on computer science
in general, just take it easy and follow the schedule then you’ll be
fine; I also recommend to take it with friends or a study group too,
much easier unlike the way I took 😥, but still doable with solo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://edx.org&#34;&gt;edX&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.fast.ai/&#34;&gt;fast.ai&lt;/a&gt; — free courses on machine learning, ooooh
yeah&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://freecodecamp.org&#34;&gt;freeCodeCamp&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;;
project-based curriculum for web development&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ixl.com/&#34;&gt;IXL&lt;/a&gt; — an educational resource and learning site
on K-12 curriculum&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://khanacademy.org&#34;&gt;Khan Academy&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;; there are
also other topics outside of programming (i.e., mathematics, physics)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://learnxinyminutes.com&#34;&gt;Learn X in Y Minutes&lt;/a&gt; — a
community-created repository of summaries for you to learn the X
programming languages&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://learning.linkedin.com/&#34;&gt;LinkedIn Learning&lt;/a&gt; — eLearning platform
of LinkedIn&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mva.microsoft.com/&#34;&gt;Microsoft Virtual Academy&lt;/a&gt; — yup, Microsoft
has their own learning platform&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ocw.mit.edu/index.htm&#34;&gt;MIT OpenCourseWare&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;;
contains courses from a lot of subjects; you also might want to check
out their &lt;a href=&#34;https://ocw.mit.edu/courses/ocw-scholar/&#34;&gt;OCW Scholar Courses&lt;/a&gt;
wherein they are essentially more in-depth versions of the usual courses&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://university.mongodb.com/&#34;&gt;MongoDB University&lt;/a&gt; — official courses
from MongoDB&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://online.stanford.edu/courses&#34;&gt;Online Stanford Courses&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.oercommons.org/&#34;&gt;Open Educational Resources&lt;/a&gt; —
self-explanatory as to what their content is about&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://oyc.yale.edu/courses&#34;&gt;Open Yale Courses&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://scrimba.com/&#34;&gt;Scrimba&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;; videos with
interactive code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://everythingmaths.co.za/&#34;&gt;Siyavula&lt;/a&gt; — mathematics- and
science-focused open educational resources&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.skillshare.com/&#34;&gt;SkillShare&lt;/a&gt; — almost like Udemy, almost
like Udemy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.teachengineering.org/&#34;&gt;Teach Engineering&lt;/a&gt; — well, it’s a
educational resources site containing engineering stuff&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.theodinproject.com/&#34;&gt;The Odin Project&lt;/a&gt; — similar approach
to freeCodeCamp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tutorialspoint.com/index.htm&#34;&gt;Tutorials Point&lt;/a&gt; —
&lt;strong&gt;(recommended)&lt;/strong&gt;; a good overview on a bunch of programming languages&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://tutsplus.com/&#34;&gt;TutPlus&lt;/a&gt; — a bunch of tutorials and courses&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.udacity.com/&#34;&gt;Udacity&lt;/a&gt; —most, if not all courses are
focused on technology&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://udemy.com&#34;&gt;Udemy&lt;/a&gt; — HINT: they are discounted for almost
all-year round; I also recommend to only look out for the top courses
since there’s a lot of cluttering stuff in there&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.w3schools.com/&#34;&gt;W3Schools&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://mathworld.wolfram.com/&#34;&gt;Wolfram MathWorld&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_academics_focused_sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_academics_focused_sites&#34;&gt;&lt;/a&gt;Academics-focused Sites&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.academia.edu/&#34;&gt;Academia.edu&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://brainly.com/&#34;&gt;Brainly&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;; for students and
peer-to-peer engagement&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mendeley.com/&#34;&gt;Mendeley&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://scholar.google.com/&#34;&gt;Google Scholar&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.researchgate.net/&#34;&gt;Researchgate&lt;/a&gt; — most published studies
under their platform are free to view&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_documentations&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_documentations&#34;&gt;&lt;/a&gt;Documentations&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://devdocs.io/&#34;&gt;DevDocs&lt;/a&gt; — &lt;strong&gt;(very much recommended)&lt;/strong&gt;; a site
wherein official documentation of different languages can be found;
there’s also an offline version of it if you are lacking of internet
speed (like me)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.gitbook.com/&#34;&gt;GitBook&lt;/a&gt; — easier finding for documentations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/&#34;&gt;MDN Web Docs&lt;/a&gt; — &lt;strong&gt;(very much
recommended)&lt;/strong&gt;; if you’re trying to learn web development and programming
in general, this can be a hub for it&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_books&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_books&#34;&gt;&lt;/a&gt;Books&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://aosabook.org/en/index.html&#34;&gt;The Architecture on Open Source
Applications&lt;/a&gt; — A bundle of books that are free to read online&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://algorithms.wtf/&#34;&gt;Algorithms (by &lt;em&gt;Jeff Erickson&lt;/em&gt;)&lt;/a&gt; — it’s a good
book on algorithms (though not recommended as a first book on data
structures and algorithms)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://open.bccampus.ca/&#34;&gt;BC Campus Open Ed Open Textbook Database&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://bookboon.com/&#34;&gt;Bookboon&lt;/a&gt; — offers premium books as well&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://mfleck.cs.illinois.edu/building-blocks/&#34;&gt;Building Blocks for
Theoretical Computer Science&lt;/a&gt; — self-explanatory title is
self-explanatory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://betterexplained.com/calculus/&#34;&gt;Calculus (by &lt;em&gt;Kalid Azad&lt;/em&gt; from
&lt;em&gt;Better Explained&lt;/em&gt;)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://freecomputerbooks.com&#34;&gt;Free Computer Books&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/EbookFoundation/free-programming-books&#34;&gt;Free
Programming Books&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;; a GitHub repo by the E-Book
Foundation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/EbookFoundation/free-science-books&#34;&gt;Free Science
Books&lt;/a&gt; — another GitHub repo by the E-Book Foundation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://gameprogrammingpatterns.com&#34;&gt;Game Programming Patterns&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://greenteapress.com/wp/&#34;&gt;Green Tea Press&lt;/a&gt; — free computer
science-related ebooks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://htdp.org/&#34;&gt;How to Design Programs, 2nd Edition (HTML version)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ptolemy.berkeley.edu/books/leeseshia/download.html&#34;&gt;Introduction
to Embedded Systems, 2nd Edition (2017, Lee and Seshia)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://inventwithpython.com/&#34;&gt;Invent with Python&lt;/a&gt; — A collection of
free Python online books authored by Al Sweigart&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://learnyouahaskell.com/&#34;&gt;Learn You A Haskell&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://math.wikia.com/wiki/Math_Wiki&#34;&gt;Math Wiki&lt;/a&gt; — well, it is
structured like a textbook and it is said that the Math Wiki is a
textbook so there’s that&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mitpress.mit.edu/mit-press-open&#34;&gt;MIT Press Open&lt;/a&gt; — yes, free
and open access books from MIT Press&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://book.goalkicker.com/&#34;&gt;Notes for Professionals&lt;/a&gt; — &lt;strong&gt;(very much
recommended)&lt;/strong&gt;; made by folks at Stack Overflow from the Stack Overflow
documentation for variety of languages and despite the title, it is
quite helpful for beginners like me, as well; also, it is frequently
updated like once per week&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://opendatastructures.org/&#34;&gt;Open Data Structures&lt;/a&gt; — offers book&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://openlibrary.org/&#34;&gt;Open Library&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textbooks.opensuny.org/&#34;&gt;Open SUNY Textbooks&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://open.umn.edu/opentextbooks&#34;&gt;Open Textbook Library&lt;/a&gt; —
&lt;strong&gt;(recommended)&lt;/strong&gt;; same as OpenStax&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cnx.org/&#34;&gt;OpenStax CNX&lt;/a&gt; — a database of open educational
resources&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://openstax.org/&#34;&gt;OpenStax&lt;/a&gt; — &lt;strong&gt;(very much recommended in
sciences)&lt;/strong&gt;; a library of open-licensed expert-curated college textbook
and resources&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://divakarvi.github.io/bk-spca/spca.html&#34;&gt;Scientific Programming
and Computer Architecture&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://sarabander.github.io/sicp/&#34;&gt;Structure and Interpretation of
Computer Programs, 2nd Edition (HTML version)&lt;/a&gt; — unofficial (and
prettier) version of
&lt;a href=&#34;https://mitpress.mit.edu/sites/default/files/sicp/index.html&#34;&gt;one of
MIT’s famous programming book (that can also be found online)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.feynmanlectures.caltech.edu/&#34;&gt;The Feynman’s Lectures on
Physics&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.wikitolearn.org/&#34;&gt;WikiToLearn&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_katas_practice_sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_katas_practice_sites&#34;&gt;&lt;/a&gt;Katas (Practice Sites)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://old.reddit.com/r/dailyprogrammer/&#34;&gt;/r/dailyprogrammer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://coderbyte.com&#34;&gt;Coderbyte&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://codewars.com/&#34;&gt;Codewars&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://projecteuler.net/&#34;&gt;Euler Project&lt;/a&gt; — &lt;strong&gt;(recommended, if you want
to be more challenged)&lt;/strong&gt;; has more focus on applying mathematical
concepts than programming&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://exercism.io&#34;&gt;Exercism&lt;/a&gt; — a site that focuses improving you
through the mentor-mentee model&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://hackerrank.com/&#34;&gt;HackerRank&lt;/a&gt; — &lt;strong&gt;(recommended, if you want to be
more challenged)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.pramp.com/&#34;&gt;Pramp&lt;/a&gt; — you get to practice some programming
interview questions and it’s free&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_articles&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_articles&#34;&gt;&lt;/a&gt;Articles&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.brainpickings.org&#34;&gt;Brain Pickings&lt;/a&gt; — it’s about whatever
your brain might be piqued to&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.to/&#34;&gt;Dev.to&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.explainthatstuff.com/&#34;&gt;Explain That Stuff&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/&#34;&gt;GeeksforGeeks&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;; a
computer science portal (for geeks)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/&#34;&gt;Medium&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://preadr.com/&#34;&gt;Preadr&lt;/a&gt; — an article link collector collecting
articles related to your configured interests&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://scratchapixel.com/&#34;&gt;Scratch A Pixel&lt;/a&gt; — a list of articles on
computer graphics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.wikipedia.org/&#34;&gt;Wikipedia&lt;/a&gt; — if you want to learn random
things&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_communities&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_communities&#34;&gt;&lt;/a&gt;Communities&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.codenewbie.org/&#34;&gt;CodeNewbie&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.codingblocks.net/&#34;&gt;Coding Blocks&lt;/a&gt; — they also have a
podcast&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.to/&#34;&gt;Dev.to&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;; beginner-friendly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://forum.freecodecamp.org&#34;&gt;freeCodeCamp Community&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt; &lt;strong&gt;(of course)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://news.ycombinator.com/&#34;&gt;HackerNews&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/coding/&#34;&gt;Reddit /r/coding&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/learnprogramming/&#34;&gt;Reddit /r/learnprogramming&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com&#34;&gt;Stack Overflow&lt;/a&gt; — look for the whole Meta
Exchange network if you want to visit more communities other than Stack
Overflow&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_podcasts&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_podcasts&#34;&gt;&lt;/a&gt;Podcasts&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.codenewbie.org/basecs&#34;&gt;BaseCS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.codenewbie.org/podcast&#34;&gt;CodeNewbie Podcast&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.codingblocks.net/category/podcast/&#34;&gt;Coding Blocks Podcast&lt;/a&gt;
— great for beginners&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://collegeinfogeek.com/cast/&#34;&gt;College Info Geek Podcast&lt;/a&gt; — not
related to programming; a good refresher about a variety of stuff&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://devchat.tv/&#34;&gt;DevChat&lt;/a&gt; — a list of podcast&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://developertea.simplecast.fm/&#34;&gt;Developer Tea&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://syntax.fm/&#34;&gt;Syntax&lt;/a&gt; — &lt;strong&gt;(recommended if you’re into web dev’t)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.programmingthrowdown.com/&#34;&gt;Programming Throwdown&lt;/a&gt; —
beginner-friendly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://realtalkjavascript.simplecast.fm/&#34;&gt;Real Talk JavaScript&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://softskills.audio/&#34;&gt;Soft Skills Engineering&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;;
it’s a podcast series about the things that relate to software
engineering that are not mostly coding-related&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://youarenotsosmart.com/podcast/&#34;&gt;You Are Not So Smart&lt;/a&gt; — it’s a
podcast series about exploring self-delusions and some psychological
stuff and I really like psychological stuff so that’s why it’s here&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_blogs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_blogs&#34;&gt;&lt;/a&gt;Blogs&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_learning&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_learning&#34;&gt;&lt;/a&gt;Learning&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://calnewport.com/&#34;&gt;Cal Newport&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://collegeinfogeek.com/&#34;&gt;College Info Geek&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://scotthyoung.com/&#34;&gt;Scott Young&lt;/a&gt; — a blog that mainly focuses on
learning&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_programming&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_programming&#34;&gt;&lt;/a&gt;Programming&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.codinghorror.com/&#34;&gt;Coding Horror&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://css-tricks.com/&#34;&gt;CSS Tricks&lt;/a&gt; — a blog that focuses on
front-end development&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://sivers.org/&#34;&gt;Derek Sivers&lt;/a&gt; — a blog from a guy who had a lot
of things to say on a lot of topics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://flaviocopes.com/&#34;&gt;Flavio Copes&lt;/a&gt; — another blog that focuses on
front-end development&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://jeremykun.com/&#34;&gt;Jeremy Kun&lt;/a&gt; — a programmer with a focus on
mathematics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.joelonsoftware.com&#34;&gt;Joel On Software&lt;/a&gt; — a software-related
blog from Joel Spolsky, the CEO from Stack Overflow&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://codeblog.jonskeet.uk/&#34;&gt;Jon Skeet’s Coding Blog&lt;/a&gt; — Jon Skeet’s
blog; * insert Jon Skeet fact here *&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://joshuapullen.com/blog/&#34;&gt;Joshua Pullen&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://hacks.mozilla.org/&#34;&gt;Mozilla Hacks&lt;/a&gt; — mainly focuses on web
development progress&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.scottlogic.com/&#34;&gt;Scott Logic&lt;/a&gt; — it’s a blog that focuses
on a broad spectrum of stuff&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://webapplog.com/&#34;&gt;webapplog&lt;/a&gt; — mainly focuses on Node.js&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://wesbos.com/blog/&#34;&gt;Wes Bos&lt;/a&gt; — creator of several courses and
some helpful posts along the way&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_newsletter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_newsletter&#34;&gt;&lt;/a&gt;Newsletter&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://frontendfoc.us/&#34;&gt;Frontend Focus&lt;/a&gt; — another weekly newsletter
about front-end development&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://gamedevjsweekly.com/&#34;&gt;Gamedev.js Weekly&lt;/a&gt; — weekly newsletter
about HTML5 Game Development&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://javascriptweekly.com/&#34;&gt;JavaScript Weekly&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://nodeweekly.com/&#34;&gt;Node Weekly&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://newsletter.nodejs.org/&#34;&gt;Official Node.js Weekly Newsletter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://postanly.ongoodbits.com/&#34;&gt;Postanly&lt;/a&gt; — a weekly digest of
productivity life articles&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://pycoders.com/&#34;&gt;Pycoders Weekly&lt;/a&gt; — a weekly newsletter on Python&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_youtube_channel&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_youtube_channel&#34;&gt;&lt;/a&gt;YouTube Channel&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/user/crashcourse/&#34;&gt;Crash Course&lt;/a&gt; —
&lt;strong&gt;(recommended)&lt;/strong&gt;; a YouTube channel that specializes in introducing you
to a lot of concepts and subjects such as computers, sciences, and
computer science&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCyIe-61Y8C4_o-zZCtO4ETQ&#34;&gt;DevTips&lt;/a&gt; —
&lt;strong&gt;(recommended)&lt;/strong&gt;; beginner-friendly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCVk8weS4S2kJfja72fTxh5A&#34;&gt;freeCodeCamp
Talks&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ&#34;&gt;freeCodeCamp&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCO1cgjhGzsSYb1rsB4bFe4Q&#34;&gt;Fun Fun
Function&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;; your metaphorical caffeine every Monday&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCoLUji8TYrgDy74_iiazvYA&#34;&gt;Jarvis
Johnson&lt;/a&gt; — comedy channel with a slight focus on tech&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UC4a-Gbdw7vOaccHmFo40b9g&#34;&gt;Khan Academy&lt;/a&gt;
— videos on various academic topics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCVTlvUkGslCV_h-nSAId8Sw&#34;&gt;LearnCode.academy&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/user/LevelUpTuts/&#34;&gt;LevelUpTuts&lt;/a&gt; —
&lt;strong&gt;(recommended)&lt;/strong&gt;; a beginner-friendly channel that mostly contains
tutorials and introductions on various topics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCpCSAcbqs-sjEVfk_hMfY9w&#34;&gt;Majorprep&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/user/mozhacks&#34;&gt;Mozilla Hacks&lt;/a&gt; — web video
series &amp;#34;Web Demystified&amp;#34;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCFe6jenM1Bc54qtBsIJGRZQ&#34;&gt;patrickJMT&lt;/a&gt; —
focuses on mathematics so if you want to learn math through YouTube,
here is one channel that specializes on it&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCoHhuummRZaIVX7bD4t2czg&#34;&gt;Professor
Leonard&lt;/a&gt; — a YouTube channel that focuses on giving topics on calculus&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCvjgXvBlbQiydffZU7m1_aw&#34;&gt;The Coding
Train&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/user/Vsauce&#34;&gt;Vsauce&lt;/a&gt; — need to say more?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCoebwHSTvwalADTJhps0emA&#34;&gt;Wes Bos&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_operating_systems_yes_some_of_them_are_free&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_operating_systems_yes_some_of_them_are_free&#34;&gt;&lt;/a&gt;Operating Systems (yes, some of them are free)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_windows_10_i_guess_it_is_free_now_also_recommended&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_windows_10_i_guess_it_is_free_now_also_recommended&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/software-download/windows10ISO&#34;&gt;Windows 10&lt;/a&gt; &lt;strong&gt;(I guess it is free now, also recommended)&lt;/strong&gt;&lt;/h3&gt;

&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_linux_overwhelming_majority_of_them_are_free_and_open_source&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_linux_overwhelming_majority_of_them_are_free_and_open_source&#34;&gt;&lt;/a&gt;Linux — overwhelming majority of them are free and open source&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; — not recommended for beginners&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://fedoraproject.org/&#34;&gt;Fedora&lt;/a&gt; — kind of similar to Ubuntu&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linuxmint.com/&#34;&gt;Linux Mint&lt;/a&gt; — &lt;strong&gt;(recommended for
beginners)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://manjaro.org/&#34;&gt;Manjaro&lt;/a&gt; — another one of the beginner-friendly
distro&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.opensuse.org/&#34;&gt;OpenSUSE&lt;/a&gt; — available in two distinct
versions: Tumbleweed and Leap&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://getsol.us/&#34;&gt;Solus&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; — &lt;strong&gt;(recommended for beginners)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_programming_tools&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_programming_tools&#34;&gt;&lt;/a&gt;Programming Tools&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_offline_ide&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_offline_ide&#34;&gt;&lt;/a&gt;Offline IDE&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.eclipse.org/&#34;&gt;Eclipse&lt;/a&gt; — Linux alternative; also has
Windows version&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/&#34;&gt;Jetbrains&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;; has an
assortment of tools for different programming languages and environment;
also has support for students so you can apply for an educational pack,
if you’re eligible&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.visualstudio.com/&#34;&gt;Visual Studio (IDE)&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;;
Windows-only&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_online_ide&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_online_ide&#34;&gt;&lt;/a&gt;Online IDE&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://codeanywhere.com/&#34;&gt;Codeanywhere&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://codesandbox.io/&#34;&gt;CodeSandbox&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;; really acts
as a solid online alternative in case you want to work on the go
(mostly, for JavaScript-oriented web development)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://codepen.io&#34;&gt;Codepen&lt;/a&gt; — focuses on the front-end dev’t&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://repl.it/&#34;&gt;Repl.it&lt;/a&gt; — has stronger support for a back-end dev’t&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_text_editors&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_text_editors&#34;&gt;&lt;/a&gt;Text Editors&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;Atom&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.vim.org/&#34;&gt;Vim&lt;/a&gt; — I have no words for this, yet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt; — &lt;strong&gt;(very much
recommended)&lt;/strong&gt;; platform-agnostic (found on Windows, Mac, &amp;amp; Linux)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_web_browsers&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_web_browsers&#34;&gt;&lt;/a&gt;Web Browsers&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mozilla.org/en-US/firefox/developer/all/&#34;&gt;Firefox
Developer Edition&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mozilla.org/en-US/firefox/all/&#34;&gt;Firefox&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.google.com/chrome/browser/beta.html&#34;&gt;Google Chrome Beta&lt;/a&gt; —
slight alternative for Google Canary&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.google.com/chrome/browser/canary.html&#34;&gt;Google Chrome
Canary&lt;/a&gt; — Windows-only&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.google.com/intl/en/chrome/&#34;&gt;Google Chrome&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_communication&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_communication&#34;&gt;&lt;/a&gt;Communication&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://discordapp.com/&#34;&gt;Discord&lt;/a&gt; — client messenger&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://pidgin.im/&#34;&gt;Pidgin&lt;/a&gt; — also a client messenger&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://slack.com/&#34;&gt;Slack&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;; a very good chat client
between teams&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.thunderbird.net/en-US/&#34;&gt;Thunderbird&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;;
e-mail client&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_productivity_tools&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_productivity_tools&#34;&gt;&lt;/a&gt;Productivity Tools&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://asoftmurmur.com/&#34;&gt;A Soft Murmur&lt;/a&gt; — an ambient noise generator
with a lot more sounds than rain&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lastpass.com&#34;&gt;LastPass&lt;/a&gt; — cloud password manager&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medleytext.net/&#34;&gt;MedleyText&lt;/a&gt; — Evernote but targeted towards
developers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.notion.so/?r=ed358a0e3f6d4e47a5db21a17beaa7dd&#34;&gt;Notion&lt;/a&gt; —
distraction-free app for taking notes in Markdown&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.rainymood.com/&#34;&gt;Rainy Mood&lt;/a&gt; — lets you focus through the
ambience (if you’re the type who find rain to be relaxing)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://trello.com&#34;&gt;Trello&lt;/a&gt; — a project management tool&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_others&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_others&#34;&gt;&lt;/a&gt;Others&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://calibre-ebook.com/&#34;&gt;Calibre&lt;/a&gt; — an e-book library management
tool&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_mathematical_tools&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_mathematical_tools&#34;&gt;&lt;/a&gt;Mathematical Tools&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.fxsolver.com/&#34;&gt;fxSolver&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.geogebra.org/&#34;&gt;Geogebra&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mathway.com/Algebra&#34;&gt;Mathway&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.symbolab.com/&#34;&gt;Symbolab&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_platforms_for_your_future_apps&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_platforms_for_your_future_apps&#34;&gt;&lt;/a&gt;Platforms For Your Future Apps&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/&#34;&gt;BitBucket&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/free/&#34;&gt;Amazon Web Services (AWS) — Free Tier&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;; yeah&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://heroku.com/&#34;&gt;Heroku&lt;/a&gt; — &lt;strong&gt;(recommended, if you’re starting)&lt;/strong&gt;;
pretty much free&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://azure.microsoft.com/en-us/free/&#34;&gt;Microsoft Azure — Free Tier&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://netlify.com/&#34;&gt;Netlify&lt;/a&gt; — &lt;strong&gt;(recommended)&lt;/strong&gt;; their free options is
pretty much amazing&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_stock_resources&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_stock_resources&#34;&gt;&lt;/a&gt;Stock Resources&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_images&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_images&#34;&gt;&lt;/a&gt;Images&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.pexels.com/&#34;&gt;Pexels&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.pixabay.com/&#34;&gt;Pixabay&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://unsplash.com/&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_fonts&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_fonts&#34;&gt;&lt;/a&gt;Fonts&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.1001fonts.com/&#34;&gt;1001 Fonts&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.fontsquirrel.com/&#34;&gt;Font Squirrel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.losttype.com/&#34;&gt;Lost Type&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_other_stuff&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_other_stuff&#34;&gt;&lt;/a&gt;Other Stuff&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.canva.com/&#34;&gt;Canva&lt;/a&gt; — why not create your own creative
designs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://coolors.co/&#34;&gt;Coolors&lt;/a&gt; — &lt;strong&gt;(recommended, if you are in design)&lt;/strong&gt;;
color scheme generator&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://creativemarket.com/&#34;&gt;Creative Market&lt;/a&gt; — free creative stuff
weekly&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_content_delivery_networks_cdn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_content_delivery_networks_cdn&#34;&gt;&lt;/a&gt;Content Delivery Networks (CDN)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cdnjs.com/&#34;&gt;cdnjs&lt;/a&gt; — &lt;strong&gt;(recommended, if you’re in web dev’t)&lt;/strong&gt;;
CDN for web-related libraries&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cloudinary.com/&#34;&gt;Cloudinary&lt;/a&gt; — mostly images and video CDN;
also has image and video manipulation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.staticaly.com/&#34;&gt;Staticaly&lt;/a&gt; — CDN that serves files from
different repo (BitBucket, GitLab, GitHub, and even GitHub gists) with
the proper headers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://uploadcare.com/&#34;&gt;UploadCare&lt;/a&gt; — image CDN with image
manipulation on-the-fly&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_student_packs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_student_packs&#34;&gt;&lt;/a&gt;Student Packs&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.autodesk.com&#34;&gt;Autocad&lt;/a&gt; — offers free years of the premium
version of their products&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://education.github.com/pack/&#34;&gt;GitHub Educational Pack&lt;/a&gt; —
assortment of benefits like unlimited private repositories on their own
site, free domain name for a year, and free premium boosts on more sites&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/student/&#34;&gt;JetBrain Student Pack&lt;/a&gt; — offers
free licenses for their tools like
&lt;a href=&#34;https://www.jetbrains.com/clion&#34;&gt;CLion&lt;/a&gt;,
&lt;a href=&#34;https://www.jetbrains.com/webstorm&#34;&gt;WebStorm&lt;/a&gt;, and
&lt;a href=&#34;https://www.jetbrains.com/idea&#34;&gt;IntelliJ IDEA Ultimate&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/education/students&#34;&gt;Microsoft Student
Pack&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_miscellaneous&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#_miscellaneous&#34;&gt;&lt;/a&gt;Miscellaneous&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.codinghorror.com/a-pragmatic-quick-reference/&#34;&gt;A Pragmatic
Quick Reference&lt;/a&gt; — it’s a collection of wisdoms put together in a list
from the Coding Horror&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://archive.org/&#34;&gt;Archive&lt;/a&gt; — it’s an archive site for everything,
it seems; you can find a lot of stuff in there&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.class-central.com/&#34;&gt;Class Central&lt;/a&gt; — a search engine for
courses at different MOOC sites&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kamranahmedse/developer-roadmap&#34;&gt;Developer Roadmap
(by kamranahmedse)&lt;/a&gt; — &lt;strong&gt;(very much recommended)&lt;/strong&gt;; your reference in case
you want to choose a specific role in software development (mine is more
on the back-end development)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.tube&#34;&gt;DevTube&lt;/a&gt; — YouTube for developers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://distrowatch.com/&#34;&gt;Distrowatch&lt;/a&gt; — &lt;strong&gt;(recommended, if you’re into
Linux)&lt;/strong&gt;; website watching for updates around Linux distros&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://keepachangelog.com/en/1.0.0/&#34;&gt;Keep A Changelog&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.keyvalues.com/&#34;&gt;keyvalues&lt;/a&gt; — it’s a engineering job finder&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://localhackday.mlh.io/&#34;&gt;Local Hackday MLH (Major League Hacking)&lt;/a&gt;
— it’s a global hackathon (that are related to MLH) finder&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mooc-list.com/&#34;&gt;MOOC List&lt;/a&gt; — similar to Class Central&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.openculture.com/&#34;&gt;Open Culture&lt;/a&gt; — a site that provides open
content and resources&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://opensource.com/&#34;&gt;Open Source&lt;/a&gt; — a site that talks all open
source things&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;\* - &lt;em&gt;if you’re on a Windows OS, probably you’re locked out of the
option to download the ISO directly, to download it directly, you have
to change the user profile from your browser usually, you can do that by
going into &amp;#39;Responsive Design Mode&amp;#39; (Ctrl + Shift + M) on Firefox (or
anything similar to Chrome and other browsers) and choosing a
non-Windows device (choose an Apple product for easy choices) and you
shall see that the page will reload and the layout will change&lt;/em&gt; OR you
can just download a browser extension to change your User Agent&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry></feed>
